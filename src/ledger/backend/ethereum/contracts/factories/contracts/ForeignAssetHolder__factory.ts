/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ForeignAssetHolder,
  ForeignAssetHolderInterface,
} from "../../contracts/ForeignAssetHolder";

const _abi = [
  {
    inputs: [],
    name: "CallerIsNotErdstall",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1167FailedCreateClone",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
    ],
    name: "ForeignAssetContractDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "origin_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
    ],
    name: "deployedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erdstall",
    outputs: [
      {
        internalType: "contract Erdstall",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "foreignAssets",
    outputs: [
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ForeignAssetHolder__factory {
  static readonly abi = _abi;
  static createInterface(): ForeignAssetHolderInterface {
    return new Interface(_abi) as ForeignAssetHolderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ForeignAssetHolder {
    return new Contract(address, _abi, runner) as unknown as ForeignAssetHolder;
  }
}
