/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC20Holder,
  ERC20HolderInterface,
} from "../../contracts/ERC20Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erdstall",
        type: "address",
      },
      {
        internalType: "address",
        name: "template",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotErdstall",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMetadataSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
    ],
    name: "ForeignAssetContractDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "origin_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
    ],
    name: "deployedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erdstall",
    outputs: [
      {
        internalType: "contract Erdstall",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "foreignAssets",
    outputs: [
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "certificate",
        type: "bytes",
      },
    ],
    name: "registerMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b506040516116ac3803806116ac83398101604081905261003091610070565b6001600160a01b03928316608052600060a052911660c05261ffff1660e0526100be565b80516001600160a01b038116811461006b57600080fd5b919050565b60008060006060848603121561008557600080fd5b61008e84610054565b925061009c60208501610054565b9150604084015161ffff811681146100b357600080fd5b809150509250925092565b60805160a05160c05160e05161159361011960003960008181610637015261078f01526000818161014a0152610802015260006106da01526000818160b7015281816103b70152818161057701526106ab01526115936000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636ede62381161005b5780636ede6238146100ee5780636f2ddd931461014557806370808ce31461016c578063d1beaffa1461017f57600080fd5b80632448cd0c14610082578063411f925c146100b257806347e7ef24146100d9575b600080fd5b610095610090366004610f17565b610192565b6040516001600160a01b0390911681526020015b60405180910390f35b6100957f000000000000000000000000000000000000000000000000000000000000000081565b6100ec6100e7366004610f58565b6101ba565b005b6101256100fc366004610f74565b6001602081905260009182526040909120805491015461ffff82169162010000900460ff169083565b6040805161ffff90941684529115156020840152908201526060016100a9565b6100957f000000000000000000000000000000000000000000000000000000000000000081565b6100ec61017a366004610fe9565b610397565b6100ec61018d3660046110de565b61056c565b6000828152602082815260408083208352908290529020546001600160a01b03165b92915050565b806000036101f4576040517f95b66fe900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821660009081526001602052604090205462010000900460ff166102cc576040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa919061117e565b6102c7576040516312171d8360e31b815260040160405180910390fd5b610346565b6040517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018290526001600160a01b03831690639dc29fac90604401600060405180830381600087803b15801561032d57600080fd5b505af1158015610341573d6000803e3d6000fd5b505050505b60408051600180825281830190925260009160208083019080368337019050509050818160008151811061037c5761037c6111b6565b602002602001018181525050610392838261060b565b505050565b60008a8152600260205260409020805460ff16156103b55750610560565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630a8a0c7e6104468d8d8d8d8d8d604051602001610402969594939291906111f5565b60408051601f198184030181526020601f8b0181900481028401810190925289835291908a908a908190840183828082843760009201919091525061074192505050565b85856040518463ffffffff1660e01b81526004016104669392919061126d565b60006040518083038186803b15801561047e57600080fd5b505afa158015610492573d6000803e3d6000fd5b50505060008c8152602081905260409020546001600160a01b031690508015610520576040516327bb992160e21b81526001600160a01b03821690639eee6484906104e9908e908e908e908e908e90600401611299565b600060405180830381600087803b15801561050357600080fd5b505af1158015610517573d6000803e3d6000fd5b5050505061055d565b815460ff191660019081178355820161053a8b8d83611357565b506002820161054a898b83611357565b5060038201805460ff191660ff89161790555b50505b50505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ce576040517f164cbd7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806105db878761078a565b9150915080156105f6576105f182868686610921565b610602565b610602828686866109f3565b50505050505050565b6001600160a01b0382166000908152600160205260408120805482919062010000900460ff16610669577f000000000000000000000000000000000000000000000000000000000000000092506001600160a01b038516915061067b565b8054600182015461ffff909116935091505b6040517fe83fd4110000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e83fd411906107089033907f000000000000000000000000000000000000000000000000000000000000000090889088908b90600401611417565b600060405180830381600087803b15801561072257600080fd5b505af1158015610736573d6000803e3d6000fd5b505050505050505050565b815160208301207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c81206107828184610a63565b949350505050565b6000807f000000000000000000000000000000000000000000000000000000000000000061ffff168461ffff16036107c75750819050600161091a565b60008481526020848152604080832080845291839052909120546001600160a01b031680156107fd5792506000915061091a9050565b6108267f0000000000000000000000000000000000000000000000000000000000000000610a8d565b60008381526020818152604080832080546001600160a01b0386167fffffffffffffffffffffffff00000000000000000000000000000000000000009091168117909155815160608101835261ffff808d16825260018286018181528386018e815294885295819052939095209051815494511515620100000262ffffff19909516951694909417929092178355905191015590506108c58186610a9a565b604080516001600160a01b038316815261ffff881660208201529081018690527f4a5d13431938ce6a6ac4346b8066a52855a261cc4b57a83cffc41f961f9eb9519060600160405180910390a1925060009150505b9250929050565b600082826000818110610936576109366111b6565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526020909202939093013560248401819052935087169163a9059cbb91506044016020604051808303816000875af11580156109ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cf919061117e565b6109ec576040516312171d8360e31b815260040160405180910390fd5b5050505050565b600082826000818110610a0857610a086111b6565b6040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602090920293909301356024840181905293508716916340c10f199150604401610708565b600080600080610a738686610bb9565b925092509250610a838282610c06565b5090949350505050565b60006101b4826000610d13565b816001600160a01b031663e1c7392a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ad557600080fd5b505af1158015610ae9573d6000803e3d6000fd5b5050506000828152600260205260409020805490915060ff16156103925760038101546040516327bb992160e21b81526001600160a01b03851691639eee648491610b44916001860191600287019160ff169060040161150e565b600060405180830381600087803b158015610b5e57600080fd5b505af1158015610b72573d6000803e3d6000fd5b5050506000838152600260205260408120805460ff191681559150610b9a6001830182610eaa565b610ba8600283016000610eaa565b50600301805460ff19169055505050565b60008060008351604103610bf35760208401516040850151606086015160001a610be588828585610ddb565b955095509550505050610bff565b50508151600091506002905b9250925092565b6000826003811115610c1a57610c1a611547565b03610c23575050565b6001826003811115610c3757610c37611547565b03610c6e576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115610c8257610c82611547565b03610cc1576040517ffce698f7000000000000000000000000000000000000000000000000000000008152600481018290526024015b60405180910390fd5b6003826003811115610cd557610cd5611547565b03610d0f576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610cb8565b5050565b600081471015610d58576040517fcf47918100000000000000000000000000000000000000000000000000000000815247600482015260248101839052604401610cb8565b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090506001600160a01b0381166101b4576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610e165750600091506003905082610ea0565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610e6a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e9657506000925060019150829050610ea0565b9250600091508190505b9450945094915050565b508054610eb6906112d6565b6000825580601f10610ec6575050565b601f016020900490600052602060002090810190610ee49190610ee7565b50565b5b80821115610efc5760008155600101610ee8565b5090565b803561ffff81168114610f1257600080fd5b919050565b60008060408385031215610f2a57600080fd5b610f3383610f00565b946020939093013593505050565b80356001600160a01b0381168114610f1257600080fd5b60008060408385031215610f6b57600080fd5b610f3383610f41565b600060208284031215610f8657600080fd5b610f8f82610f41565b9392505050565b60008083601f840112610fa857600080fd5b50813567ffffffffffffffff811115610fc057600080fd5b60208301915083602082850101111561091a57600080fd5b803560ff81168114610f1257600080fd5b60008060008060008060008060008060c08b8d03121561100857600080fd5b8a35995060208b013567ffffffffffffffff81111561102657600080fd5b6110328d828e01610f96565b909a5098505060408b013567ffffffffffffffff81111561105257600080fd5b61105e8d828e01610f96565b9098509650611071905060608c01610fd8565b945060808b013567ffffffffffffffff81111561108d57600080fd5b6110998d828e01610f96565b90955093505060a08b013567ffffffffffffffff8111156110b957600080fd5b6110c58d828e01610f96565b915080935050809150509295989b9194979a5092959850565b6000806000806000608086880312156110f657600080fd5b6110ff86610f00565b94506020860135935061111460408701610f41565b9250606086013567ffffffffffffffff81111561113057600080fd5b8601601f8101881361114157600080fd5b803567ffffffffffffffff81111561115857600080fd5b8860208260051b840101111561116d57600080fd5b959894975092955050506020019190565b60006020828403121561119057600080fd5b81518015158114610f8f57600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60a08152601860a08201527f4572647374616c6c46756e6769626c654d65746164617461000000000000000060c082015286602082015260e06040820152600061124360e0830187896111cc565b82810360608401526112568186886111cc565b91505060ff83166080830152979650505050505050565b6001600160a01b03841681526040602082015260006112906040830184866111cc565b95945050505050565b6060815260006112ad6060830187896111cc565b82810360208401526112c08186886111cc565b91505060ff831660408301529695505050505050565b600181811c908216806112ea57607f821691505b60208210810361130a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561039257806000526020600020601f840160051c810160208510156113375750805b601f840160051c820191505b818110156109ec5760008155600101611343565b67ffffffffffffffff83111561136f5761136f6111a0565b6113838361137d83546112d6565b83611310565b6000601f8411600181146113b7576000851561139f5750838201355b600019600387901b1c1916600186901b1783556109ec565b600083815260209020601f19861690835b828110156113e857868501358255602094850194600190920191016113c8565b50868210156114055760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b600060a082016001600160a01b038816835260ff8716602084015261ffff8616604084015284606084015260a0608084015280845180835260c08501915060208601925060005b8181101561147c57835183526020938401939092019160010161145e565b50909998505050505050505050565b60008154611498816112d6565b8085526001821680156114b257600181146114ce57611505565b60ff1983166020870152602082151560051b8701019350611505565b84600052602060002060005b838110156114fc5781546020828a0101526001820191506020810190506114da565b87016020019450505b50505092915050565b606081526000611521606083018661148b565b8281036020840152611533818661148b565b91505060ff83166040830152949350505050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204fe8ea2d25edc1343902d4cc8412e416040f31b689222486f6b820b20b40570864736f6c634300081b0033";

type ERC20HolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20HolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Holder__factory extends ContractFactory {
  constructor(...args: ERC20HolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    erdstall: AddressLike,
    template: AddressLike,
    _chainID: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      erdstall,
      template,
      _chainID,
      overrides || {}
    );
  }
  override deploy(
    erdstall: AddressLike,
    template: AddressLike,
    _chainID: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      erdstall,
      template,
      _chainID,
      overrides || {}
    ) as Promise<
      ERC20Holder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Holder__factory {
    return super.connect(runner) as ERC20Holder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20HolderInterface {
    return new Interface(_abi) as ERC20HolderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Holder {
    return new Contract(address, _abi, runner) as unknown as ERC20Holder;
  }
}
