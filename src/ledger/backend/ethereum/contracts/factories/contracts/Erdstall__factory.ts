/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Erdstall, ErdstallInterface } from "../../contracts/Erdstall";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tee",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "genesis",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_epochDuration",
        type: "uint64",
      },
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyWithdrawn",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerHasAlreadyChallengedThisEpoch",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerHasNoFrozenDeposits",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotTokenHolder",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerMustHaveValuesToChallenge",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyBalanceProof",
    type: "error",
  },
  {
    inputs: [],
    name: "ErdstallIsFrozen",
    type: "error",
  },
  {
    inputs: [],
    name: "ExitProofInChallengeBalanceProof",
    type: "error",
  },
  {
    inputs: [],
    name: "HasOpenChallenges",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "NoChallengeRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "NoExitProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NoOpenChallenges",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingFreeze",
    type: "error",
  },
  {
    inputs: [],
    name: "RegisteredTokenTypeMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenTypeNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "TooEarly",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTooEarlyEpochNotYetSealed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongBalanceChunk",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongBalanceProofEpochForChallenge",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChain",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongEpoch",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "count",
        type: "uint32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "origin",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "localID",
                type: "bytes32",
              },
            ],
            internalType: "struct Erdstall.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct Erdstall.TokenValue[]",
        name: "tokens",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exit",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "ChallengeResponded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "origin",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "localID",
                type: "bytes32",
              },
            ],
            internalType: "struct Erdstall.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct Erdstall.TokenValue",
        name: "value",
        type: "tuple",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "FirstTimeFungible",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sampleURI",
        type: "string",
      },
    ],
    name: "FirstTimeNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
    ],
    name: "Frozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "assetType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
    ],
    name: "TokenTypeRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "origin",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "localID",
                type: "bytes32",
              },
            ],
            internalType: "struct Erdstall.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        indexed: true,
        internalType: "struct Erdstall.TokenValue",
        name: "token",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "WithdrawalException",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "origin",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "localID",
                type: "bytes32",
              },
            ],
            internalType: "struct Erdstall.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct Erdstall.TokenValue[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "bigBangTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "challenges",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployBlockNum",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "assetType",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "token",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposits",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "origin",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "assetType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "localID",
            type: "bytes32",
          },
        ],
        internalType: "struct Erdstall.Asset",
        name: "asset",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
    ],
    name: "encodeBalanceProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ensureFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDuration",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozenEpoch",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "holderTypes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "metadataWasHandled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "numChallenges",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "localTokenType",
        type: "uint8",
      },
    ],
    name: "registerTokenType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "respondChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "block",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
        ],
        internalType: "struct Erdstall.FreezeProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "certificate",
        type: "bytes",
      },
    ],
    name: "submitFreezeProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenHolders",
    outputs: [
      {
        internalType: "contract TokenHolder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "verifyBalance",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "abiCode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "verifyTeeSig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "withdrawFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFrozenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610120604052600780546001600160401b0319166002600160401b031790553480156200002b57600080fd5b50604051620045c5380380620045c58339810160408190526200004e91620000fa565b62000059336200008d565b6001600160a01b039093166080526001600160401b0343811660a05291821660c0521660e05261ffff16610100526200016c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160401b0381168114620000f557600080fd5b919050565b600080600080608085870312156200011157600080fd5b84516001600160a01b03811681146200012957600080fd5b93506200013960208601620000dd565b92506200014960408601620000dd565b9150606085015161ffff811681146200016157600080fd5b939692955090935050565b60805160a05160c05160e051610100516143dc620001e9600039600081816104a501528181610a2101528181610c7d01528181610f8101528181611bd60152612e880152600081816102e901526121f001526000818161045d01526122150152600061033d01526000818161036e01526108cd01526143dc6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b05f620711610097578063d306a7b011610071578063d306a7b014610508578063e83fd4111461051b578063f29107731461052e578063f2fde38b1461054e57600080fd5b8063b05f6207146104da578063ba487473146104ed578063d2ef73981461050057600080fd5b8063a53d2a54116100d3578063a53d2a5414610435578063aa0f878714610458578063ab4f4bce1461048d578063adc879e9146104a057600080fd5b80638da5cb5b146103d65780639be21025146103f4578063a33a05401461040757600080fd5b80636463287711610166578063715018a611610140578063715018a6146103905780637aca9c691461039857806384d98432146103ab5780638c2d1768146103b357600080fd5b8063646328771461033857806364c38ddd1461035f57806367eeb62b1461036957600080fd5b80634a9527a8116101a25780634a9527a81461028f5780634e905134146102c45780634ff0876a146102e4578063585db72a1461032457600080fd5b8063072f8cca146101c957806310fb107514610229578063234c49a014610249575b600080fd5b6101ff6101d736600461332c565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61023c6102373660046136cd565b610561565b6040516102209190613752565b61027a610257366004613765565b600560209081526000928352604080842090915290825290205463ffffffff1681565b60405163ffffffff9091168152602001610220565b6102b261029d366004613798565b60016020526000908152604090205460ff1681565b60405160ff9091168152602001610220565b6102d76102d23660046137b3565b6105b2565b60405161022091906137ef565b61030b7f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff9091168152602001610220565b60075461030b9067ffffffffffffffff1681565b61030b7f000000000000000000000000000000000000000000000000000000000000000081565b610367610626565b005b6101ff7f000000000000000000000000000000000000000000000000000000000000000081565b6103676107a6565b6103676103a6366004613890565b6107ba565b610367610806565b6103c66103c13660046138f4565b6108c4565b6040519015158152602001610220565b60005473ffffffffffffffffffffffffffffffffffffffff166101ff565b61036761040236600461396d565b6108fa565b6103c6610415366004613765565b600460209081526000928352604080842090915290825290205460ff1681565b6103c6610443366004613798565b60086020526000908152604090205460ff1681565b61047f7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610220565b61036761049b36600461396d565b610b14565b6104c77f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610220565b6103676104e836600461396d565b610dff565b6103676104fb3660046139de565b6112ce565b610367611423565b610367610516366004613a15565b61152e565b610367610529366004613a9e565b611837565b61047f61053c366004613b50565b60066020526000908152604090205481565b61036761055c366004613798565b61212a565b6060816000015182602001518360400151846060015185608001518660a001518760c0015160405160200161059c9796959493929190613c39565b6040516020818303038152906040529050919050565b600360205282600052604060002060205281600052604060002081815481106105da57600080fd5b6000918252602091829020604080516060810182526003909302909101805461ffff8116845260ff62010000909104169383019390935260019092015491810191909152925083915050565b61064460075467ffffffffffffffff1667fffffffffffffffe141590565b1561064b57565b60006106556121e3565b9050610662600180613d14565b61066d906001613d14565b67ffffffffffffffff168167ffffffffffffffff1610156106ba576040517f085de62500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106c7600180613d14565b6106d2906001613d14565b6106dc9083613d3c565b67ffffffffffffffff811660009081526006602052604081205491925003610730576040517fbf1d9a6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061073d600183613d3c565b600780547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff8316908117909155604051919250907f5e20151a99b0432a9ac06d33b91b77d3134ce0638cc70d7df042947ca48a2caf90600090a2505050565b6107ae612249565b6107b860006122ca565b565b6107cc6107c683610561565b826108c4565b610802576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61080e610626565b6040805160008082526020820190925261086d9082610867565b6040805160a081018252600091810182815260608083018490526080830193909352815260208101919091528152602001906001900390816108285790505b5061233f565b905080516000036108aa576040517f52e45e7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007546108c19067ffffffffffffffff16826128ea565b50565b60006108f183837f0000000000000000000000000000000000000000000000000000000000000000612bb2565b90505b92915050565b610902610626565b61090a612c48565b67ffffffffffffffff166109216020850185613b50565b67ffffffffffffffff161115610963576040517f085de62500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3361097460a0850160808601613798565b73ffffffffffffffffffffffffffffffffffffffff16146109c1576040517f4e6a565c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075467ffffffffffffffff166109db6020850185613b50565b67ffffffffffffffff1614610a1c576040517f254f6ab200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff7f000000000000000000000000000000000000000000000000000000000000000016610a516080850160608601613d5d565b61ffff1614610a8c576040517f10dfc03300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ad4610a9884613d78565b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107ba92505050565b6000610af4610ae660c0860186613d84565b610aef91613dec565b61233f565b600754909150610b0e9067ffffffffffffffff16826128ea565b50505050565b610b3260075467ffffffffffffffff1667fffffffffffffffe141590565b15610b69576040517fb29ebf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b736121e3565b9050610b80600180613d14565b610b8b906001613d14565b67ffffffffffffffff168167ffffffffffffffff1610610c175767ffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd82011660009081526006602052604090205415610c17576040517e5be66700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c1f612c48565b67ffffffffffffffff16610c366020860186613b50565b67ffffffffffffffff161115610c78576040517fe6e64ebc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff7f000000000000000000000000000000000000000000000000000000000000000016610cad6080860160608701613d5d565b61ffff1614610ce8576040517f10dfc03300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33610cf960a0860160808701613798565b73ffffffffffffffffffffffffffffffffffffffff1614610d46576040517f4e6a565c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d5660c0850160a08601613df9565b610d8c576040517fa5736a8100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dd4610d9885613d78565b84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107ba92505050565b610b0e610de46020860186613b50565b610df160c0870187613d84565b610dfa91613dec565b6128ea565b610e1d60075467ffffffffffffffff1667fffffffffffffffe141590565b15610e54576040517fb29ebf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610e5e6121e3565b9050610e6b600180613d14565b610e76906001613d14565b67ffffffffffffffff168167ffffffffffffffff1610610f025767ffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd82011660009081526006602052604090205415610f02576040517e5be66700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f0f600180613d14565b610f176121e3565b610f219190613d3c565b905067ffffffffffffffff8116610f3b6020870187613b50565b67ffffffffffffffff1614610f7c576040517f254f6ab200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff7f000000000000000000000000000000000000000000000000000000000000000016610fb16080870160608801613d5d565b61ffff1614610fec576040517f10dfc03300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff811660009081526005602052604081208161101660a0890160808a01613798565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160009081205463ffffffff169150819003611080576040517f0ce63e0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b63ffffffff81166110976040880160208901613e14565b6110a2906001613e2f565b63ffffffff16146110df576040517f38ee6b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111276110eb87613d78565b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107ba92505050565b6111376060870160408801613e14565b63ffffffff168163ffffffff160361117c5767ffffffffffffffff8216600090815260066020526040812080549161116e83613e4c565b91905055506000905061118a565b8061118681613e81565b9150505b67ffffffffffffffff8216600090815260056020526040812082916111b560a08a0160808b01613798565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff9290921691909117905561121e60a0870160808801613798565b73ffffffffffffffffffffffffffffffffffffffff166112416020880188613b50565b67ffffffffffffffff167f5c48277659215aaf0facef5d08697306e1cd011dcdb5e7455f5d4c31d3dcddbc61127c60408a0160208b01613e14565b61128c60608b0160408c01613e14565b61129960c08c018c613d84565b6112a960c08e0160a08f01613df9565b8c8c6040516112be9796959493929190613f1a565b60405180910390a3505050505050565b6112d6612249565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff168015611353576113108260016140a4565b60ff168160ff161461134e576040517fc081a4b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b61135e8260016140a4565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260016020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff968716179055938616808352600282529184902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905583519182528101919091527fa67714b04395227af4e4053e2f5b91c09833fa91968bef5e1e3190437ac329c5910160405180910390a1505050565b61144160075467ffffffffffffffff1667fffffffffffffffe141590565b15611478576040517fb29ebf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006114826121e3565b905061148f600180613d14565b61149a906001613d14565b67ffffffffffffffff168167ffffffffffffffff16106115265767ffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd82011660009081526006602052604090205415611526576040517e5be66700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108c1612cea565b611539600180613d14565b611544906001613d14565b61154f906001613d14565b61155f6060870160408801613b50565b6115699190613d14565b67ffffffffffffffff1661157b6121e3565b67ffffffffffffffff16146115bc576040517f254f6ab200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116996115ce6020880188613d5d565b6115de6040890160208a01613b50565b6115ee60608a0160408b01613b50565b6040516020016116559392919060808082526013908201527f4572647374616c6c467265657a6550726f6f660000000000000000000000000060a082015261ffff93909316602084015267ffffffffffffffff918216604084015216606082015260c00190565b60408051601f198184030181526020601f890181900481028401810190925287835291908890889081908401838280828437600092019190915250612e0792505050565b9050611743816040516020016116ff919060408082526017908201527f4572647374616c6c4c69676874436c69656e7443657274000000000000000000606082015273ffffffffffffffffffffffffffffffffffffffff91909116602082015260800190565b60408051601f198184030181526020601f8701819004810284018101909252858352919086908690819084018382808284376000920191909152506108c492505050565b611779576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117896060870160408801613b50565b60075467ffffffffffffffff90811691161461182f576117af6060870160408801613b50565b600780547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff929092169190911790556117f86060870160408801613b50565b67ffffffffffffffff167f5e20151a99b0432a9ac06d33b91b77d3134ce0638cc70d7df042947ca48a2caf60405160405180910390a25b505050505050565b3360009081526001602052604081205460ff169003611882576040517f0c4abd2a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118a060075467ffffffffffffffff1667fffffffffffffffe141590565b156118d7576040517fb29ebf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118e16121e3565b90506118ee600180613d14565b6118f9906001613d14565b67ffffffffffffffff168167ffffffffffffffff16106119855767ffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd82011660009081526006602052604090205415611985576040517e5be66700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061198f6121e3565b60ff881660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff166119fa5760ff8716600090815260026020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790555b6000604051806040016040528060405180606001604052808a61ffff1681526020018b60ff168152602001898152508152602001868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508152509050600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548160ff021916908360ff1602179055506040820151816001015550506020820151816002019080519060200190611b78929190613231565b5050508873ffffffffffffffffffffffffffffffffffffffff168267ffffffffffffffff167feb3100c7367bb9282fc3c80cba98d82025422adc0f72a4e137d0acc3757f849283604051611bcc91906140bd565b60405180910390a37f000000000000000000000000000000000000000000000000000000000000000061ffff168761ffff1614611c0a575050612121565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260086020526040902054869060ff1661211d5773ffffffffffffffffffffffffffffffffffffffff8116600081815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611d3757604080518881526080602082018190526005908201527f457468657200000000000000000000000000000000000000000000000000000060a082015260c08183018190526003908201527f455448000000000000000000000000000000000000000000000000000000000060e08201526012606082015290517fb1e1d22424bcf87c08b3dab1ba6e7b5fdfbae1cebde669d3ac99811cdba3ccc0918190036101000190a1505050612121565b60608173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa925050508015611da557506040513d6000823e601f3d908101601f19168201604052611da291908101906140d0565b60015b611df1573d808015611dd3576040519150601f19603f3d011682016040523d82523d6000602084013e611dd8565b606091505b5060405180602001604052806000815250915050611df4565b90505b60608273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa925050508015611e6257506040513d6000823e601f3d908101601f19168201604052611e5f91908101906140d0565b60015b611eae573d808015611e90576040519150601f19603f3d011682016040523d82523d6000602084013e611e95565b606091505b5060405180602001604052806000815250915050611eb1565b90505b60ff8b16611fa65760008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f22575060408051601f3d908101601f19168201909252611f1f91810190614147565b60015b611f60573d808015611f50576040519150601f19603f3d011682016040523d82523d6000602084013e611f55565b606091505b506000915050611f63565b90505b7fb1e1d22424bcf87c08b3dab1ba6e7b5fdfbae1cebde669d3ac99811cdba3ccc08a848484604051611f989493929190614164565b60405180910390a15061211a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff8c16016120e85760608373ffffffffffffffffffffffffffffffffffffffff1663c87b56dd8a8a6000818110612001576120016141a4565b905060200201356040518263ffffffff1660e01b815260040161202691815260200190565b600060405180830381865afa92505050801561206457506040513d6000823e601f3d908101601f1916820160405261206191908101906140d0565b60015b6120b0573d808015612092576040519150601f19603f3d011682016040523d82523d6000602084013e612097565b606091505b50604051806020016040528060008152509150506120b3565b90505b7f59a3797aef1d99d386b9b3e9b8aff1f784aba7b9e43435540cb12727d38e7fc08a848484604051611f9894939291906141d3565b6040517fd623472500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505b5050505b50505050505050565b612132612249565b73ffffffffffffffffffffffffffffffffffffffff81166121da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108c1816122ca565b600067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001661223a7f00000000000000000000000000000000000000000000000000000000000000004261421d565b6122449190614230565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016121d1565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60075460609060009060039082906123629067ffffffffffffffff166001613d14565b67ffffffffffffffff90811682526020808301939093526040918201600090812033825290935290822060075490935060039183916123a391166002613d14565b67ffffffffffffffff90811682526020808301939093526040918201600090812033825290935290822060075490935060039183916123e3911683613d14565b67ffffffffffffffff1681526020808201929092526040908101600090812033825290925281208054845486548951939550919290916124229161426b565b61242c919061426b565b612436919061426b565b67ffffffffffffffff81111561244e5761244e613349565b6040519080825280602002602001820160405280156124ab57816020015b6040805160a0810182526000918101828152606080830184905260808301939093528152602081019190915281526020019060019003908161246c5790505b5090506000805b8751811015612511578781815181106124cd576124cd6141a4565b60200260200101518383806124e19061427e565b9450815181106124f3576124f36141a4565b602002602001018190525080806125099061427e565b9150506124b2565b5060005b855481101561260857858181548110612530576125306141a4565b60009182526020918290206040805160a081018252600393909302909101805461ffff81168484019081526201000090910460ff1660608501526001820154608085015283526002810180548351818702810187019094528084529394919385830193928301828280156125c357602002820191906000526020600020905b8154815260200190600101908083116125af575b5050505050815250508383806125d89061427e565b9450815181106125ea576125ea6141a4565b602002602001018190525080806126009061427e565b915050612515565b5060005b84548110156126ff57848181548110612627576126276141a4565b60009182526020918290206040805160a081018252600393909302909101805461ffff81168484019081526201000090910460ff1660608501526001820154608085015283526002810180548351818702810187019094528084529394919385830193928301828280156126ba57602002820191906000526020600020905b8154815260200190600101908083116126a6575b5050505050815250508383806126cf9061427e565b9450815181106126e1576126e16141a4565b602002602001018190525080806126f79061427e565b91505061260c565b5060005b83548110156127f65783818154811061271e5761271e6141a4565b60009182526020918290206040805160a081018252600393909302909101805461ffff81168484019081526201000090910460ff1660608501526001820154608085015283526002810180548351818702810187019094528084529394919385830193928301828280156127b157602002820191906000526020600020905b81548152602001906001019080831161279d575b5050505050815250508383806127c69061427e565b9450815181106127d8576127d86141a4565b602002602001018190525080806127ee9061427e565b915050612703565b506007546003906000906128159067ffffffffffffffff166001613d14565b67ffffffffffffffff1681526020808201929092526040908101600090812033825290925281206128459161327c565b6007546003906000906128639067ffffffffffffffff166002613d14565b67ffffffffffffffff1681526020808201929092526040908101600090812033825290925281206128939161327c565b6007546003906000906128b09067ffffffffffffffff1683613d14565b67ffffffffffffffff1681526020808201929092526040908101600090812033825290925281206128e09161327c565b5095945050505050565b67ffffffffffffffff8216600090815260046020908152604080832033845290915290205460ff1615612949576040517f6507689f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff82166000908152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055815190036129d0576040517feae9756900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8151811015612b545760008282815181106129f0576129f06141a4565b602002602001015190506000612a098260000151612e7c565b82518051604091820151602086015192517fd1beaffa00000000000000000000000000000000000000000000000000000000815293945073ffffffffffffffffffffffffffffffffffffffff85169363d1beaffa93612a6f9392913391906004016142b6565b600060405180830381600087803b158015612a8957600080fd5b505af1925050508015612a9a575060015b612b3f573d808015612ac8576040519150601f19603f3d011682016040523d82523d6000602084013e612acd565b606091505b5082604051612adc91906142ff565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff168767ffffffffffffffff167f17c878afc06be2054e373e11d19bd490c8a7957085244d6154d1c9f7f7799d6684604051612b359190613752565b60405180910390a4505b50508080612b4c9061427e565b9150506129d3565b503373ffffffffffffffffffffffffffffffffffffffff168267ffffffffffffffff167fc28beb9414af60e5f13561f08a5f1b5719d8bd778c3159c33c9cf261d7fb898483604051612ba69190614364565b60405180910390a35050565b600080612c1385805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506000612c218286612f44565b73ffffffffffffffffffffffffffffffffffffffff90811690851614925050509392505050565b600080612c536121e3565b9050612c60600180613d14565b612c6b906001613d14565b612c76906001613d14565b67ffffffffffffffff168167ffffffffffffffff161015612cc3576040517f085de62500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01919050565b60006001612cf66121e3565b612d009190613d3c565b67ffffffffffffffff8116600090815260056020908152604080832033845290915290205490915063ffffffff1615612d65576040517f860ec9c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff81166000818152600560209081526040808320338452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000016600117905592825260069052908120805491612dc88361427e565b9091555050604051339067ffffffffffffffff8316907f9f71686e9e2eed0a0a99340b1c3b230369f255b1d452130cead54f8308654dfd90600090a350565b600080612e6884805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050612e748184612f44565b949350505050565b600080826020015190507f000000000000000000000000000000000000000000000000000000000000000061ffff16836000015161ffff16148015612ec65750602083015160ff16155b8015612ed457506040830151155b15612edd575060025b60ff811660009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680612f3d576040517fc9adea7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b6000806000612f538585612f68565b91509150612f6081612fad565b509392505050565b6000808251604103612f9e5760208301516040840151606085015160001a612f9287828585613160565b94509450505050612fa6565b506000905060025b9250929050565b6000816004811115612fc157612fc1614377565b03612fc95750565b6001816004811115612fdd57612fdd614377565b03613044576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016121d1565b600281600481111561305857613058614377565b036130bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016121d1565b60038160048111156130d3576130d3614377565b036108c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016121d1565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156131975750600090506003613228565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156131eb573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff811661322157600060019250925050613228565b9150600090505b94509492505050565b82805482825590600052602060002090810192821561326c579160200282015b8281111561326c578251825591602001919060010190613251565b5061327892915061329d565b5090565b50805460008255600302906000526020600020908101906108c191906132b2565b5b80821115613278576000815560010161329e565b808211156132785780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001681556000600182018190556132f660028301826132ff565b506003016132b2565b50805460008255906000526020600020908101906108c1919061329d565b60ff811681146108c157600080fd5b60006020828403121561333e57600080fd5b8135612f3d8161331d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561339b5761339b613349565b60405290565b6040516060810167ffffffffffffffff8111828210171561339b5761339b613349565b60405160e0810167ffffffffffffffff8111828210171561339b5761339b613349565b604051601f8201601f1916810167ffffffffffffffff8111828210171561341057613410613349565b604052919050565b803567ffffffffffffffff8116811461343057600080fd5b919050565b803563ffffffff8116811461343057600080fd5b803561ffff8116811461343057600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461343057600080fd5b8035801515811461343057600080fd5b600067ffffffffffffffff8211156134a9576134a9613349565b5060051b60200190565b60006134c66134c18461348f565b6133e7565b8381529050602080820190600585811b8501878111156134e557600080fd5b855b818110156135f357803567ffffffffffffffff808211156135085760008081fd5b90880190818b03608081121561351e5760008081fd5b613526613378565b6060808312156135365760008081fd5b61353e6133a1565b925061354985613449565b8352888501356135588161331d565b838a01526040858101359084015291815290830135908282111561357c5760008081fd5b81840193508c601f85011261359357600092508283fd5b833592506135a36134c18461348f565b83815292871b840188019288810192508d8411156135c15760008081fd5b938801935b838510156135df578435835293880193918801916135c6565b8189015288525050509383019383016134e7565b50505050509392505050565b600082601f83011261361057600080fd5b6108f1838335602085016134b3565b600060e0828403121561363157600080fd5b6136396133c4565b905061364482613418565b815261365260208301613435565b602082015261366360408301613435565b604082015261367460608301613449565b60608201526136856080830161345b565b608082015261369660a0830161347f565b60a082015260c082013567ffffffffffffffff8111156136b557600080fd5b6136c1848285016135ff565b60c08301525092915050565b6000602082840312156136df57600080fd5b813567ffffffffffffffff8111156136f657600080fd5b612e748482850161361f565b60005b8381101561371d578181015183820152602001613705565b50506000910152565b6000815180845261373e816020860160208601613702565b601f01601f19169290920160200192915050565b6020815260006108f16020830184613726565b6000806040838503121561377857600080fd5b61378183613418565b915061378f6020840161345b565b90509250929050565b6000602082840312156137aa57600080fd5b6108f18261345b565b6000806000606084860312156137c857600080fd5b6137d184613418565b92506137df6020850161345b565b9150604084013590509250925092565b815161ffff16815260208083015160ff169082015260408083015190820152606081016108f4565b600067ffffffffffffffff82111561383157613831613349565b50601f01601f191660200190565b600082601f83011261385057600080fd5b813561385e6134c182613817565b81815284602083860101111561387357600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156138a357600080fd5b823567ffffffffffffffff808211156138bb57600080fd5b6138c78683870161361f565b935060208501359150808211156138dd57600080fd5b506138ea8582860161383f565b9150509250929050565b6000806040838503121561390757600080fd5b823567ffffffffffffffff8082111561391f57600080fd5b6138c78683870161383f565b60008083601f84011261393d57600080fd5b50813567ffffffffffffffff81111561395557600080fd5b602083019150836020828501011115612fa657600080fd5b60008060006040848603121561398257600080fd5b833567ffffffffffffffff8082111561399a57600080fd5b9085019060e082880312156139ae57600080fd5b909350602085013590808211156139c457600080fd5b506139d18682870161392b565b9497909650939450505050565b600080604083850312156139f157600080fd5b6139fa8361345b565b91506020830135613a0a8161331d565b809150509250929050565b600080600080600085870360a0811215613a2e57600080fd5b6060811215613a3c57600080fd5b50859450606086013567ffffffffffffffff80821115613a5b57600080fd5b613a6789838a0161392b565b90965094506080880135915080821115613a8057600080fd5b50613a8d8882890161392b565b969995985093965092949392505050565b60008060008060008060a08789031215613ab757600080fd5b613ac08761345b565b95506020870135613ad08161331d565b9450613ade60408801613449565b935060608701359250608087013567ffffffffffffffff80821115613b0257600080fd5b818901915089601f830112613b1657600080fd5b813581811115613b2557600080fd5b8a60208260051b8501011115613b3a57600080fd5b6020830194508093505050509295509295509295565b600060208284031215613b6257600080fd5b6108f182613418565b600081518084526020808501945080840160005b83811015613b9b57815187529582019590820190600101613b7f565b509495945050505050565b613bcc828251805161ffff16825260208082015160ff1690830152604090810151910152565b6000602082015160806060850152612e746080850182613b6b565b6000815180845260208085019450848260051b860182860160005b85811015613c2c578383038952613c1a838351613ba6565b98850198925090840190600101613c02565b5090979650505050505050565b610100808252600f908201527f4572647374616c6c42616c616e6365000000000000000000000000000000000061012082015267ffffffffffffffff8816602082015263ffffffff87811660408301528616606082015261ffff8516608082015273ffffffffffffffffffffffffffffffffffffffff841660a082015282151560c082015261014060e08201819052600090613cd781840185613be7565b9a9950505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff818116838216019080821115613d3557613d35613ce5565b5092915050565b67ffffffffffffffff828116828216039080821115613d3557613d35613ce5565b600060208284031215613d6f57600080fd5b6108f182613449565b60006108f4368361361f565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112613db957600080fd5b83018035915067ffffffffffffffff821115613dd457600080fd5b6020019150600581901b3603821315612fa657600080fd5b60006108f13684846134b3565b600060208284031215613e0b57600080fd5b6108f18261347f565b600060208284031215613e2657600080fd5b6108f182613435565b63ffffffff818116838216019080821115613d3557613d35613ce5565b600081613e5b57613e5b613ce5565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b600063ffffffff808316818103613e9a57613e9a613ce5565b6001019392505050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613ed657600080fd5b8260051b80836020870137939093016020019392505050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b600060a0820163ffffffff808b1684526020818b16818601526040915060a0828601528289845260c0860190506005935060c08a851b8701018b60005b8c811015614075577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4089840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818f3603018112613fb857600080fd5b8e01608061ffff613fc883613449565b16855286820135613fd88161331d565b60ff16858801528188013588860152606080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261401e57600080fd5b90920187810192903567ffffffffffffffff81111561403c57600080fd5b808b1b360384131561404d57600080fd5b828288015261405f8388018286613ea4565b9789019796505050928601925050600101613f57565b50508915156060880152868103608088015261409281898b613eef565b9e9d5050505050505050505050505050565b60ff81811683821601908111156108f4576108f4613ce5565b6020815260006108f16020830184613ba6565b6000602082840312156140e257600080fd5b815167ffffffffffffffff8111156140f957600080fd5b8201601f8101841361410a57600080fd5b80516141186134c182613817565b81815285602083850101111561412d57600080fd5b61413e826020830160208601613702565b95945050505050565b60006020828403121561415957600080fd5b8151612f3d8161331d565b84815260806020820152600061417d6080830186613726565b828103604084015261418f8186613726565b91505060ff8316606083015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8481526080602082015260006141ec6080830186613726565b82810360408401526141fe8186613726565b905082810360608401526142128185613726565b979650505050505050565b818103818111156108f4576108f4613ce5565b600082614266577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b808201808211156108f4576108f4613ce5565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036142af576142af613ce5565b5060010190565b61ffff8516815283602082015273ffffffffffffffffffffffffffffffffffffffff831660408201526080606082015260006142f56080830184613b6b565b9695505050505050565b8151805161ffff16825260208082015160ff1681840152604091820151918301919091528083015180516000929182019190839060608601905b808310156143595784518252938301936001929092019190830190614339565b509695505050505050565b6020815260006108f16020830184613be7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220054a1dca89351dc907e5cc6aeebfdbcf2d1604a9d6f0c412eacd7d0a95bcdaa964736f6c63430008130033";

type ErdstallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ErdstallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Erdstall__factory extends ContractFactory {
  constructor(...args: ErdstallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tee: PromiseOrValue<string>,
    genesis: PromiseOrValue<BigNumberish>,
    _epochDuration: PromiseOrValue<BigNumberish>,
    _chainID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Erdstall> {
    return super.deploy(
      _tee,
      genesis,
      _epochDuration,
      _chainID,
      overrides || {}
    ) as Promise<Erdstall>;
  }
  override getDeployTransaction(
    _tee: PromiseOrValue<string>,
    genesis: PromiseOrValue<BigNumberish>,
    _epochDuration: PromiseOrValue<BigNumberish>,
    _chainID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tee,
      genesis,
      _epochDuration,
      _chainID,
      overrides || {}
    );
  }
  override attach(address: string): Erdstall {
    return super.attach(address) as Erdstall;
  }
  override connect(signer: Signer): Erdstall__factory {
    return super.connect(signer) as Erdstall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErdstallInterface {
    return new utils.Interface(_abi) as ErdstallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erdstall {
    return new Contract(address, _abi, signerOrProvider) as Erdstall;
  }
}
