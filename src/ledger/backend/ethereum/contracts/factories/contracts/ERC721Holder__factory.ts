/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC721Holder,
  ERC721HolderInterface,
} from "../../contracts/ERC721Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erdstall",
        type: "address",
      },
      {
        internalType: "address",
        name: "template",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotErdstall",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1167FailedCreateClone",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMetadataSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
    ],
    name: "ForeignAssetContractDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "origin_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
    ],
    name: "deployedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erdstall",
    outputs: [
      {
        internalType: "contract Erdstall",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "foreignAssets",
    outputs: [
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "certificate",
        type: "bytes",
      },
    ],
    name: "registerMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "certificate",
        type: "bytes",
      },
    ],
    name: "setCustomURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001cbb38038062001cbb833981016040819052620000359162000077565b6001600160a01b03928316608052600160a052911660c05261ffff1660e052620000cb565b80516001600160a01b03811681146200007257600080fd5b919050565b6000806000606084860312156200008d57600080fd5b62000098846200005a565b9250620000a8602085016200005a565b9150604084015161ffff81168114620000c057600080fd5b809150509250925092565b60805160a05160c05160e051611b8d6200012e6000396000818161088401526109ad0152600081816101650152610a2d0152600061094101526000818160fb0152818161032f015281816103e30152818161064901526109120152611b8d6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a71604e81161005b578063a71604e814610187578063d1beaffa1461019c578063e00e0587146101af578063f53ca671146101c257600080fd5b80632448cd0c1461008d578063411f925c146100f65780636ede62381461011d5780636f2ddd9314610160575b600080fd5b6100cc61009b366004611223565b60009182526020908152604080832083529082905290205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61014861012b366004611271565b6001602081905260009182526040909120805491015461ffff1682565b6040805192835261ffff9091166020830152016100ed565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61019a6101953660046112d8565b6101d5565b005b61019a6101aa36600461132b565b610317565b61019a6101bd3660046113dc565b6103c3565b61019a6101d03660046114dc565b610618565b6000819003610210576040517f95b66fe900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205461024c576102478333308585610771565b6102d5565b6040517f8a3a4c7c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690638a3a4c7c906102a290339086908690600401611589565b600060405180830381600087803b1580156102bc57600080fd5b505af11580156102d0573d6000803e3d6000fd5b505050505b6103128383838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061085492505050565b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610386576040517f164cbd7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061039387876109a8565b9150915080156103ae576103a982868686610b70565b6103ba565b6103ba82868686610b83565b50505050505050565b60008b8152600260205260409020805460ff16156103e1575061060b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630a8a0c7e61049f8e8e8e8e8e8e8e60405160200161043d9796959493929190611641565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181526020601f8b0181900481028401810190925289835291908a908a9081908401838280828437600092019190915250610c1192505050565b85856040518463ffffffff1660e01b81526004016104bf939291906116c5565b60006040518083038186803b1580156104d757600080fd5b505afa1580156104eb573d6000803e3d6000fd5b50505060008d81526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16905080156105ae576040517f0890d80c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690630890d80c90610577908f908f908f908f908f908f906004016116fe565b600060405180830381600087803b15801561059157600080fd5b505af11580156105a5573d6000803e3d6000fd5b50505050610608565b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117835582016105e68c8e83611811565b50600282016105f68a8c83611811565b5060038201610606888a83611811565b505b50505b5050505050505050505050565b60008881526020819052604090205473ffffffffffffffffffffffffffffffffffffffff168061064757600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630a8a0c7e61069d8b8b8b8b60405160200161043d949392919061192b565b85856040518463ffffffff1660e01b81526004016106bd939291906116c5565b60006040518083038186803b1580156106d557600080fd5b505afa1580156106e9573d6000803e3d6000fd5b50506040517f3adf80b400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169250633adf80b49150610743908b908b908b90600401611989565b600060405180830381600087803b15801561075d57600080fd5b505af1158015610608573d6000803e3d6000fd5b60005b8181101561084c578573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868686868181106107ac576107ac6119a3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561082857600080fd5b505af115801561083c573d6000803e3d6000fd5b5050600190920191506107749050565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040812080548291906108c3577f0000000000000000000000000000000000000000000000000000000000000000925073ffffffffffffffffffffffffffffffffffffffff851691506108d5565b6001810154815461ffff909116935091505b6040517fe83fd41100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e83fd4119061096f9033907f000000000000000000000000000000000000000000000000000000000000000090889088908b906004016119d2565b600060405180830381600087803b15801561098957600080fd5b505af115801561099d573d6000803e3d6000fd5b505050505050505050565b6000807f000000000000000000000000000000000000000000000000000000000000000061ffff168461ffff16036109e557508190506001610b69565b600084815260208481526040808320808452918390529091205473ffffffffffffffffffffffffffffffffffffffff168015610a2857925060009150610b699050565b610a517f0000000000000000000000000000000000000000000000000000000000000000610c5a565b60008381526020818152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616908117909155815180830183528a815261ffff8c81168286019081529286526001948590529290942093518455519290910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016929091169190911790559050610b078186610cf2565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815261ffff881660208201529081018690527f4a5d13431938ce6a6ac4346b8066a52855a261cc4b57a83cffc41f961f9eb9519060600160405180910390a1925060009150505b9250929050565b610b7d8430858585610e62565b50505050565b6040517fa184e9a500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063a184e9a590610bd990869086908690600401611589565b600060405180830381600087803b158015610bf357600080fd5b505af1158015610c07573d6000803e3d6000fd5b5050505050505050565b815160208301207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c8120610c528184610f3d565b949350505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610ced576040517fc2f868f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b8173ffffffffffffffffffffffffffffffffffffffff1663e1c7392a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d3a57600080fd5b505af1158015610d4e573d6000803e3d6000fd5b5050506000828152600260205260409020805490915060ff1615610312576040517f0890d80c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690630890d80c90610dcb90600185019060028601906003870190600401611aef565b600060405180830381600087803b158015610de557600080fd5b505af1158015610df9573d6000803e3d6000fd5b505050600083815260026020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681559150610e3f60018301826111bb565b610e4d6002830160006111bb565b610e5b6003830160006111bb565b5050505050565b60005b8181101561084c578573ffffffffffffffffffffffffffffffffffffffff166342842e0e8686868686818110610e9d57610e9d6119a3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610f1957600080fd5b505af1158015610f2d573d6000803e3d6000fd5b505060019092019150610e659050565b600080600080610f4d8686610f67565b925092509250610f5d8282610fb4565b5090949350505050565b60008060008351604103610fa15760208401516040850151606086015160001a610f93888285856110c1565b955095509550505050610fad565b50508151600091506002905b9250925092565b6000826003811115610fc857610fc8611b28565b03610fd1575050565b6001826003811115610fe557610fe5611b28565b0361101c576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600282600381111561103057611030611b28565b0361106f576040517ffce698f7000000000000000000000000000000000000000000000000000000008152600481018290526024015b60405180910390fd5b600382600381111561108357611083611b28565b036110bd576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401611066565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156110fc57506000915060039050826111b1565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611150573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166111a7575060009250600191508290506111b1565b9250600091508190505b9450945094915050565b5080546111c790611776565b6000825580601f106111d7575050565b601f0160209004906000526020600020908101906111f591906111f8565b50565b5b8082111561120d57600081556001016111f9565b5090565b803561ffff81168114610ced57600080fd5b6000806040838503121561123657600080fd5b61123f83611211565b946020939093013593505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ced57600080fd5b60006020828403121561128357600080fd5b61128c8261124d565b9392505050565b60008083601f8401126112a557600080fd5b50813567ffffffffffffffff8111156112bd57600080fd5b6020830191508360208260051b8501011115610b6957600080fd5b6000806000604084860312156112ed57600080fd5b6112f68461124d565b9250602084013567ffffffffffffffff81111561131257600080fd5b61131e86828701611293565b9497909650939450505050565b60008060008060006080868803121561134357600080fd5b61134c86611211565b9450602086013593506113616040870161124d565b9250606086013567ffffffffffffffff81111561137d57600080fd5b61138988828901611293565b969995985093965092949392505050565b60008083601f8401126113ac57600080fd5b50813567ffffffffffffffff8111156113c457600080fd5b602083019150836020828501011115610b6957600080fd5b600080600080600080600080600080600060c08c8e0312156113fd57600080fd5b8b359a5067ffffffffffffffff8060208e0135111561141b57600080fd5b61142b8e60208f01358f0161139a565b909b50995060408d013581101561144157600080fd5b6114518e60408f01358f0161139a565b909950975060608d013581101561146757600080fd5b6114778e60608f01358f0161139a565b909750955060808d013581101561148d57600080fd5b61149d8e60808f01358f0161139a565b909550935060a08d01358110156114b357600080fd5b506114c48d60a08e01358e0161139a565b81935080925050509295989b509295989b9093969950565b60008060008060008060008060a0898b0312156114f857600080fd5b8835975060208901359650604089013567ffffffffffffffff8082111561151e57600080fd5b61152a8c838d0161139a565b909850965060608b013591508082111561154357600080fd5b61154f8c838d0161139a565b909650945060808b013591508082111561156857600080fd5b506115758b828c0161139a565b999c989b5096995094979396929594505050565b73ffffffffffffffffffffffffffffffffffffffff841681526040602082015281604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156115de57600080fd5b8260051b8085606085013791909101606001949350505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60a08152601360a08201527f4572647374616c6c4e46544d657461646174610000000000000000000000000060c082015287602082015260e06040820152600061168f60e08301888a6115f8565b82810360608401526116a28187896115f8565b905082810360808401526116b78185876115f8565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841681526040602082015260006116f56040830184866115f8565b95945050505050565b60608152600061171260608301888a6115f8565b82810360208401526117258187896115f8565b9050828103604084015261173a8185876115f8565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c9082168061178a57607f821691505b6020821081036117c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610312576000816000526020600020601f850160051c810160208610156117f25750805b601f850160051c820191505b8181101561084c578281556001016117fe565b67ffffffffffffffff83111561182957611829611747565b61183d836118378354611776565b836117c9565b6000601f84116001811461188f57600085156118595750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610e5b565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156118de57868501358255602094850194600190920191016118be565b5086821015611919577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b60808152601660808201527f4572647374616c6c4e46544d657461646174615552490000000000000000000060a082015284602082015283604082015260c06060820152600061197f60c0830184866115f8565b9695505050505050565b8381526040602082015260006116f56040830184866115f8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a0820173ffffffffffffffffffffffffffffffffffffffff88168352602060ff8816602085015261ffff8716604085015285606085015260a0608085015281855180845260c08601915060208701935060005b81811015611a4457845183529383019391830191600101611a28565b50909a9950505050505050505050565b60008154611a6181611776565b808552602060018381168015611a7e5760018114611ab657611ae4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838901528284151560051b8901019550611ae4565b866000528260002060005b85811015611adc5781548a8201860152908301908401611ac1565b890184019650505b505050505092915050565b606081526000611b026060830186611a54565b8281036020840152611b148186611a54565b9050828103604084015261197f8185611a54565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122060fccd935b0eba4409a2b58437f858b7ec71732794e8e041b53a7bcb8d276c5d64736f6c63430008180033";

type ERC721HolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721HolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Holder__factory extends ContractFactory {
  constructor(...args: ERC721HolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    erdstall: AddressLike,
    template: AddressLike,
    _chainID: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      erdstall,
      template,
      _chainID,
      overrides || {}
    );
  }
  override deploy(
    erdstall: AddressLike,
    template: AddressLike,
    _chainID: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      erdstall,
      template,
      _chainID,
      overrides || {}
    ) as Promise<
      ERC721Holder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Holder__factory {
    return super.connect(runner) as ERC721Holder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721HolderInterface {
    return new Interface(_abi) as ERC721HolderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC721Holder {
    return new Contract(address, _abi, runner) as unknown as ERC721Holder;
  }
}
