/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PerunToken,
  PerunTokenInterface,
} from "../../contracts/PerunToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "initBalance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ca1380380610ca183398101604081905261002f9161026d565b6040518060400160405280600a8152602001692832b93ab72a37b5b2b760b11b8152506040518060400160405280600381526020016228292760e91b815250816003908161007d91906103cf565b50600461008a82826103cf565b50505060005b82518110156100ca576100c28382815181106100ae576100ae61048d565b6020026020010151836100d260201b60201c565b600101610090565b5050506104ca565b6001600160a01b0382166101015760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b61010d60008383610111565b5050565b6001600160a01b03831661013c57806002600082825461013191906104a3565b909155506101ae9050565b6001600160a01b0383166000908152602081905260409020548181101561018f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100f8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166101ca576002805482900390556101e9565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161022e91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461026857600080fd5b919050565b6000806040838503121561028057600080fd5b82516001600160401b0381111561029657600080fd5b8301601f810185136102a757600080fd5b80516001600160401b038111156102c0576102c061023b565b604051600582901b90603f8201601f191681016001600160401b03811182821017156102ee576102ee61023b565b60405291825260208184018101929081018884111561030c57600080fd5b6020850194505b838510156103325761032485610251565b815260209485019401610313565b506020969096015195979596505050505050565b600181811c9082168061035a57607f821691505b60208210810361037a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103ca57806000526020600020601f840160051c810160208510156103a75750805b601f840160051c820191505b818110156103c757600081556001016103b3565b50505b505050565b81516001600160401b038111156103e8576103e861023b565b6103fc816103f68454610346565b84610380565b6020601f82116001811461043057600083156104185750848201515b600019600385901b1c1916600184901b1784556103c7565b600084815260208120601f198516915b828110156104605787850151825560209485019460019092019101610440565b508482101561047e5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b808201808211156104c457634e487b7160e01b600052601160045260246000fd5b92915050565b6107c8806104d96000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b4114610146578063a9059cbb1461014e578063dd62ed3e1461016157600080fd5b8063313ce5671461010e57806370a082311461011d57600080fd5b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e957806323b872dd146100fb575b600080fd5b6100b061019a565b6040516100bd9190610611565b60405180910390f35b6100d96100d436600461067b565b61022c565b60405190151581526020016100bd565b6002545b6040519081526020016100bd565b6100d96101093660046106a5565b610246565b604051601281526020016100bd565b6100ed61012b3660046106e2565b6001600160a01b031660009081526020819052604090205490565b6100b061026a565b6100d961015c36600461067b565b610279565b6100ed61016f366004610704565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101a990610737565b80601f01602080910402602001604051908101604052809291908181526020018280546101d590610737565b80156102225780601f106101f757610100808354040283529160200191610222565b820191906000526020600020905b81548152906001019060200180831161020557829003601f168201915b5050505050905090565b60003361023a818585610287565b60019150505b92915050565b600033610254858285610299565b61025f858585610336565b506001949350505050565b6060600480546101a990610737565b60003361023a818585610336565b61029483838360016103c7565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156103305781811015610321576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610330848484840360006103c7565b50505050565b6001600160a01b038316610379576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b0382166103bc576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6102948383836104ce565b6001600160a01b03841661040a576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b03831661044d576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c091815260200190565b60405180910390a350505050565b6001600160a01b0383166104f95780600260008282546104ee9190610771565b909155506105849050565b6001600160a01b03831660009081526020819052604090205481811015610565576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024810182905260448101839052606401610318565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105a0576002805482900390556105bf565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161060491815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561063f5760208186018101516040868401015201610622565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461067657600080fd5b919050565b6000806040838503121561068e57600080fd5b6106978361065f565b946020939093013593505050565b6000806000606084860312156106ba57600080fd5b6106c38461065f565b92506106d16020850161065f565b929592945050506040919091013590565b6000602082840312156106f457600080fd5b6106fd8261065f565b9392505050565b6000806040838503121561071757600080fd5b6107208361065f565b915061072e6020840161065f565b90509250929050565b600181811c9082168061074b57607f821691505b60208210810361076b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024057634e487b7160e01b600052601160045260246000fdfea26469706673582212201efe5fe31eb1d728ba92f7605cf4a61e827cd27f624b501ce175a34abc59e99464736f6c634300081b0033";

type PerunTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PerunTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PerunToken__factory extends ContractFactory {
  constructor(...args: PerunTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    accounts: AddressLike[],
    initBalance: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(accounts, initBalance, overrides || {});
  }
  override deploy(
    accounts: AddressLike[],
    initBalance: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(accounts, initBalance, overrides || {}) as Promise<
      PerunToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PerunToken__factory {
    return super.connect(runner) as PerunToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerunTokenInterface {
    return new Interface(_abi) as PerunTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PerunToken {
    return new Contract(address, _abi, runner) as unknown as PerunToken;
  }
}
