/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ForeignERC20,
  ForeignERC20Interface,
} from "../../../contracts/ForeignERC20.sol/ForeignERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "holder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051602080820180845260008084528451928301909452838252835460ff19166001179093558151919290916200004e916004916200006d565b508051620000649060059060208401906200006d565b50505062000150565b8280546200007b9062000113565b90600052602060002090601f0160209004810192826200009f5760008555620000ea565b82601f10620000ba57805160ff1916838001178555620000ea565b82800160010185558215620000ea579182015b82811115620000ea578251825591602001919060010190620000cd565b50620000f8929150620000fc565b5090565b5b80821115620000f85760008155600101620000fd565b600181811c908216806200012857607f821691505b602082108114156200014a57634e487b7160e01b600052602260045260246000fd5b50919050565b61121680620001606000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610201578063dd62ed3e14610214578063e534155d1461025a578063f57b0182146102a457600080fd5b806370a082311461019d57806395d89b41146101d35780639dc29fac146101db578063a457c2d7146101ee57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806340c10f191461018857600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b6101026102b7565b60405161010f91906110da565b60405180910390f35b61012b610126366004611026565b610349565b604051901515815260200161010f565b6003545b60405190815260200161010f565b61012b61015b366004610fea565b610361565b60085460405160ff909116815260200161010f565b61012b610183366004611026565b610385565b61019b610196366004611026565b6103d1565b005b61013f6101ab366004610f95565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b6101026104a2565b61019b6101e9366004611026565b6104b1565b61012b6101fc366004611026565b610579565b61012b61020f366004611026565b610630565b61013f610222366004610fb7565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b60005461027f90610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b61019b6102b2366004611050565b61063e565b6060600680546102c69061118c565b80601f01602080910402602001604051908101604052809291908181526020018280546102f29061118c565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b5050505050905090565b6000336103578185856106ae565b5060019392505050565b60003361036f85828561082e565b61037a8585856108eb565b506001949350505050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061035790829086906103cc90879061114d565b6106ae565b60005460ff166104285760405162461bcd60e51b815260206004820152600f60248201527f4e6f7420696e697469616c697a6564000000000000000000000000000000000060448201526064015b60405180910390fd5b600054610100900473ffffffffffffffffffffffffffffffffffffffff1633146104945760405162461bcd60e51b815260206004820152601360248201527f4f6e6c7920686f6c64657220616c6c6f77656400000000000000000000000000604482015260640161041f565b61049e8282610b13565b5050565b6060600780546102c69061118c565b60005460ff166105035760405162461bcd60e51b815260206004820152600f60248201527f4e6f7420696e697469616c697a65640000000000000000000000000000000000604482015260640161041f565b600054610100900473ffffffffffffffffffffffffffffffffffffffff16331461056f5760405162461bcd60e51b815260206004820152601360248201527f4f6e6c7920686f6c64657220616c6c6f77656400000000000000000000000000604482015260640161041f565b61049e8282610bee565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156106235760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161041f565b61037a82868684036106ae565b6000336103578185856108eb565b60005460ff16156106915760405162461bcd60e51b815260206004820152601360248201527f416c726561647920496e697469616c697a656400000000000000000000000000604482015260640161041f565b61069a33610d78565b6106a78585858585610e1a565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff83166107365760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161041f565b73ffffffffffffffffffffffffffffffffffffffff82166107bf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161041f565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108e557818110156108d85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161041f565b6108e584848484036106ae565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166109745760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161041f565b73ffffffffffffffffffffffffffffffffffffffff82166109fd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161041f565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205481811015610a995760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161041f565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b069086815260200190565b60405180910390a36108e5565b73ffffffffffffffffffffffffffffffffffffffff8216610b765760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161041f565b8060036000828254610b88919061114d565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c775760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161041f565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205481811015610d135760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161041f565b73ffffffffffffffffffffffffffffffffffffffff831660008181526001602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610821565b60005460ff1615610dcb5760405162461bcd60e51b815260206004820152601360248201527f416c726561647920496e697469616c697a656400000000000000000000000000604482015260640161041f565b6000805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff000000000000000000000000000000000000000000909216919091176001179055565b610e2660068686610e6c565b50610e3360078484610e6c565b50600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff9290921691909117905550505050565b828054610e789061118c565b90600052602060002090601f016020900481019282610e9a5760008555610efe565b82601f10610ed1578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555610efe565b82800160010185558215610efe579182015b82811115610efe578235825591602001919060010190610ee3565b50610f0a929150610f0e565b5090565b5b80821115610f0a5760008155600101610f0f565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f4757600080fd5b919050565b60008083601f840112610f5e57600080fd5b50813567ffffffffffffffff811115610f7657600080fd5b602083019150836020828501011115610f8e57600080fd5b9250929050565b600060208284031215610fa757600080fd5b610fb082610f23565b9392505050565b60008060408385031215610fca57600080fd5b610fd383610f23565b9150610fe160208401610f23565b90509250929050565b600080600060608486031215610fff57600080fd5b61100884610f23565b925061101660208501610f23565b9150604084013590509250925092565b6000806040838503121561103957600080fd5b61104283610f23565b946020939093013593505050565b60008060008060006060868803121561106857600080fd5b853567ffffffffffffffff8082111561108057600080fd5b61108c89838a01610f4c565b909750955060208801359150808211156110a557600080fd5b506110b288828901610f4c565b909450925050604086013560ff811681146110cc57600080fd5b809150509295509295909350565b600060208083528351808285015260005b81811015611107578581018301518582016040015282016110eb565b81811115611119576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115611187577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b600181811c908216806111a057607f821691505b602082108114156111da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220928601976429bc44d3e430329c8496dfd3609e8891bc6171f1a33cd5530b011964736f6c63430008060033";

type ForeignERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForeignERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForeignERC20__factory extends ContractFactory {
  constructor(...args: ForeignERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ForeignERC20> {
    return super.deploy(overrides || {}) as Promise<ForeignERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ForeignERC20 {
    return super.attach(address) as ForeignERC20;
  }
  override connect(signer: Signer): ForeignERC20__factory {
    return super.connect(signer) as ForeignERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForeignERC20Interface {
    return new utils.Interface(_abi) as ForeignERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForeignERC20 {
    return new Contract(address, _abi, signerOrProvider) as ForeignERC20;
  }
}
