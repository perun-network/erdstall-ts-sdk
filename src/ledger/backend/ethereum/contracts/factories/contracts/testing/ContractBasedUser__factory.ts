/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ContractBasedUser,
  ContractBasedUserInterface,
} from "../../../contracts/testing/ContractBasedUser";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approveERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20Holder",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721Holder",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "depositERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ETHHolder",
        name: "holder",
        type: "address",
      },
    ],
    name: "depositEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "mode_",
        type: "uint8",
      },
    ],
    name: "setMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "before_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "countdown_",
        type: "uint256",
      },
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "after_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "resetCount_",
        type: "uint256",
      },
    ],
    name: "setModeWithCountdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setRedepositHolderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610b428061001f6000396000f3fe6080604052600436106100b45760003560e01c806354ed9e3211610069578063ad9d4ba31161004e578063ad9d4ba31461029e578063d826f88f146102b1578063efcc7b38146102cd5761015f565b806354ed9e321461025e578063a8e5e4aa1461027e5761015f565b80631cad5a401161009a5780631cad5a40146101fe5780631e6c7ee21461021e57806321175b4a1461023e5761015f565b8062a7230a14610189578063150b7a02146101a95761015f565b3661015f5760006100c3610322565b905060028160058111156100d9576100d9610792565b036100e357600080fd5b60048160058111156100f7576100f7610792565b0361015d576005546001600160a01b031663d0e30db06101186002346107a8565b6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561014357600080fd5b505af1158015610157573d6000803e3d6000fd5b50505050505b005b6000610169610322565b9050600281600581111561017f5761017f610792565b0361015d57600080fd5b34801561019557600080fd5b5061015d6101a43660046107e2565b610387565b3480156101b557600080fd5b506101c96101c4366004610823565b6103ef565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b34801561020a57600080fd5b5061015d6102193660046107e2565b610583565b34801561022a57600080fd5b5061015d6102393660046108c4565b6105d1565b34801561024a57600080fd5b5061015d610259366004610970565b610639565b34801561026a57600080fd5b5061015d610279366004610992565b61066d565b34801561028a57600080fd5b5061015d6102993660046107e2565b6106c2565b61015d6102ac3660046109d6565b61073b565b3480156102bd57600080fd5b5061015d60006001819055600355565b3480156102d957600080fd5b5061015d6102e83660046109d6565b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600060015460000361036557600354600003610342575060005460ff1690565b60016003600082825461035591906109f3565b909155505060025460ff16919050565b600180600082825461037791906109f3565b909155505060005460ff16919050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044015b600060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b50505050505050565b6000806103fa610322565b9050600381600581111561041057610410610792565b0361041a57600080fd5b600581600581111561042e5761042e610792565b036105575760055460405163095ea7b360e01b81526001600160a01b039091166004820152602481018690523390819063095ea7b390604401600060405180830381600087803b15801561048157600080fd5b505af1158015610495573d6000803e3d6000fd5b5060009250600191506104a59050565b6040519080825280602002602001820160405280156104ce578160200160208202803683370190505b50905086816000815181106104e5576104e5610a1a565b60209081029190910101526005546040516314e2c09d60e31b81526001600160a01b039091169063a71604e8906105229085908590600401610a30565b600060405180830381600087803b15801561053c57600080fd5b505af1158015610550573d6000803e3d6000fd5b5050505050505b507f150b7a02000000000000000000000000000000000000000000000000000000009695505050505050565b6040517f47e7ef240000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390528416906347e7ef24906044016103b8565b6040516314e2c09d60e31b81526001600160a01b0385169063a71604e89061060190869086908690600401610a88565b600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b5050505050505050565b6000600190815560001960035560028054839260ff199091169083600581111561066557610665610792565b021790555050565b6000805485919060ff1916600183600581111561068c5761068c610792565b0217905550600183815560028054849260ff19909116908360058111156106b5576106b5610792565b0217905550600355505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610711573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107359190610aea565b50505050565b806001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b505050505050565b634e487b7160e01b600052602160045260246000fd5b6000826107c557634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03811681146107df57600080fd5b50565b6000806000606084860312156107f757600080fd5b8335610802816107ca565b92506020840135610812816107ca565b929592945050506040919091013590565b60008060008060006080868803121561083b57600080fd5b8535610846816107ca565b94506020860135610856816107ca565b935060408601359250606086013567ffffffffffffffff81111561087957600080fd5b8601601f8101881361088a57600080fd5b803567ffffffffffffffff8111156108a157600080fd5b8860208284010111156108b357600080fd5b959894975092955050506020019190565b600080600080606085870312156108da57600080fd5b84356108e5816107ca565b935060208501356108f5816107ca565b9250604085013567ffffffffffffffff81111561091157600080fd5b8501601f8101871361092257600080fd5b803567ffffffffffffffff81111561093957600080fd5b8760208260051b840101111561094e57600080fd5b949793965060200194505050565b80356006811061096b57600080fd5b919050565b60006020828403121561098257600080fd5b61098b8261095c565b9392505050565b600080600080608085870312156109a857600080fd5b6109b18561095c565b9350602085013592506109c66040860161095c565b9396929550929360600135925050565b6000602082840312156109e857600080fd5b813561098b816107ca565b81810381811115610a1457634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b6000604082016001600160a01b03851683526040602084015280845180835260608501915060208601925060005b81811015610a7c578351835260209384019390920191600101610a5e565b50909695505050505050565b6001600160a01b03841681526040602082015281604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610ad057600080fd5b8260051b8085606085013791909101606001949350505050565b600060208284031215610afc57600080fd5b8151801515811461098b57600080fdfea2646970667358221220bbceee1c2dd5f30272e429b5f408e9efdfcb87b32bbc181b959e842b6e05644d64736f6c634300081b0033";

type ContractBasedUserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractBasedUserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractBasedUser__factory extends ContractFactory {
  constructor(...args: ContractBasedUserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContractBasedUser & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContractBasedUser__factory {
    return super.connect(runner) as ContractBasedUser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractBasedUserInterface {
    return new Interface(_abi) as ContractBasedUserInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContractBasedUser {
    return new Contract(address, _abi, runner) as unknown as ContractBasedUser;
  }
}
