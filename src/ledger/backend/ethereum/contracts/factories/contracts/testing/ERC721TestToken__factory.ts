/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721TestToken,
  ERC721TestTokenInterface,
} from "../../../contracts/testing/ERC721TestToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "mode_",
        type: "uint8",
      },
    ],
    name: "setMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "before_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "countdown_",
        type: "uint256",
      },
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "after_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "resetCount_",
        type: "uint256",
      },
    ],
    name: "setModeWithCountdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820182526008815267546573742037323160c01b6020808301918252835180850190945260038452621514d560ea1b9084015281519192916200005d916000916200007c565b508051620000739060019060208401906200007c565b5050506200015f565b8280546200008a9062000122565b90600052602060002090601f016020900481019282620000ae5760008555620000f9565b82601f10620000c957805160ff1916838001178555620000f9565b82800160010185558215620000f9579182015b82811115620000f9578251825591602001919060010190620000dc565b50620001079291506200010b565b5090565b5b808211156200010757600081556001016200010c565b600181811c908216806200013757607f821691505b602082108114156200015957634e487b7160e01b600052602260045260246000fd5b50919050565b611c78806200016f6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80636352211e116100b2578063b88d4fde11610081578063d826f88f11610066578063d826f88f1461026b578063de836ebd1461027a578063e985e9c51461028d57600080fd5b8063b88d4fde14610245578063c87b56dd1461025857600080fd5b80636352211e146101f657806370a082311461020957806395d89b411461022a578063a22cb4651461023257600080fd5b806321175b4a116100ee57806321175b4a146101aa57806323b872dd146101bd57806342842e0e146101d057806354ed9e32146101e357600080fd5b806301ffc9a71461012057806306fdde0314610148578063081812fc1461015d578063095ea7b314610195575b600080fd5b61013361012e366004611901565b6102d6565b60405190151581526020015b60405180910390f35b6101506103bb565b60405161013f9190611a75565b61017061016b36600461199a565b61044d565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013f565b6101a86101a33660046118d7565b610481565b005b6101a86101b836600461193b565b6105df565b6101a86101cb3660046116df565b61064d565b6101a86101de3660046116df565b610689565b6101a86101f1366004611956565b6106bf565b61017061020436600461199a565b610750565b61021c610217366004611691565b6107c2565b60405190815260200161013f565b610150610876565b6101a861024036600461189b565b610885565b6101a861025336600461171b565b610894565b61015061026636600461199a565b61091c565b6101a860006007819055600955565b6101a8610288366004611815565b610990565b61013361029b3660046116ac565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061036957507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103b557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546103ca90611acb565b80601f01602080910402602001604051908101604052809291908181526020018280546103f690611acb565b80156104435780601f1061041857610100808354040283529160200191610443565b820191906000526020600020905b81548152906001019060200180831161042657829003601f168201915b5050505050905090565b6000610458826109cf565b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061048c82610750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105355760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061055e575061055e813361029b565b6105d05760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161052c565b6105da8383610a43565b505050565b60006007557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600955600880548291907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600581111561064557610645611b87565b021790555050565b6000610657610ae3565b9050600281600581111561066d5761066d611b87565b141561067857600080fd5b610683848484610b47565b50505050565b6000610693610ae3565b905060028160058111156106a9576106a9611b87565b14156106b457600080fd5b610683848484610bce565b600680548591907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360058111156106fc576106fc611b87565b02179055506007839055600880548391907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600581111561074357610743611b87565b0217905550600955505050565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806103b55760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161052c565b600073ffffffffffffffffffffffffffffffffffffffff821661084d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161052c565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6060600180546103ca90611acb565b610890338383610be9565b5050565b61089e3383610cfd565b6109105760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f76656400000000000000000000000000000000000000606482015260840161052c565b61068384848484610dbd565b6060610927826109cf565b600061093e60408051602081019091526000815290565b9050600081511161095e5760405180602001604052806000815250610989565b8061096884610e46565b6040516020016109799291906119fd565b6040516020818303038152906040525b9392505050565b60005b81811015610683576109bd848484848181106109b1576109b1611bb6565b90506020020135610f0e565b806109c781611b1f565b915050610993565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16610a405760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161052c565b50565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610a9d82610750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600060075460001415610b2457600954610b01575060065460ff1690565b600160096000828254610b149190611a88565b909155505060085460ff16919050565b600160076000828254610b379190611a88565b909155505060065460ff16919050565b610b513382610cfd565b610bc35760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f76656400000000000000000000000000000000000000606482015260840161052c565b6105da8383836110e5565b6105da83838360405180602001604052806000815250610894565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c655760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161052c565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600080610d0983610750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d77575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b80610db557508373ffffffffffffffffffffffffffffffffffffffff16610d9d8461044d565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b610dc88484846110e5565b610dd484848484611392565b6106835760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161052c565b60606000610e5383611577565b600101905060008167ffffffffffffffff811115610e7357610e73611be5565b6040519080825280601f01601f191660200182016040528015610e9d576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610f0157610f06565b610ea7565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff8216610f715760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161052c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610fe35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161052c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16156110555760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161052c565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8273ffffffffffffffffffffffffffffffffffffffff1661110582610750565b73ffffffffffffffffffffffffffffffffffffffff161461118e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161052c565b73ffffffffffffffffffffffffffffffffffffffff82166112165760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161052c565b8273ffffffffffffffffffffffffffffffffffffffff1661123682610750565b73ffffffffffffffffffffffffffffffffffffffff16146112bf5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161052c565b600081815260046020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526003855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b1561156c576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290611409903390899088908890600401611a2c565b602060405180830381600087803b15801561142357600080fd5b505af1925050508015611471575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261146e9181019061191e565b60015b611521573d80801561149f576040519150601f19603f3d011682016040523d82523d6000602084013e6114a4565b606091505b5080516115195760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161052c565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610db5565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106115c0577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106115ec576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061160a57662386f26fc10000830492506010015b6305f5e1008310611622576305f5e100830492506008015b612710831061163657612710830492506004015b60648310611648576064830492506002015b600a83106103b55760010192915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461167d57600080fd5b919050565b80356006811061167d57600080fd5b6000602082840312156116a357600080fd5b61098982611659565b600080604083850312156116bf57600080fd5b6116c883611659565b91506116d660208401611659565b90509250929050565b6000806000606084860312156116f457600080fd5b6116fd84611659565b925061170b60208501611659565b9150604084013590509250925092565b6000806000806080858703121561173157600080fd5b61173a85611659565b935061174860208601611659565b925060408501359150606085013567ffffffffffffffff8082111561176c57600080fd5b818701915087601f83011261178057600080fd5b81358181111561179257611792611be5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156117d8576117d8611be5565b816040528281528a60208487010111156117f157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060006040848603121561182a57600080fd5b61183384611659565b9250602084013567ffffffffffffffff8082111561185057600080fd5b818601915086601f83011261186457600080fd5b81358181111561187357600080fd5b8760208260051b850101111561188857600080fd5b6020830194508093505050509250925092565b600080604083850312156118ae57600080fd5b6118b783611659565b9150602083013580151581146118cc57600080fd5b809150509250929050565b600080604083850312156118ea57600080fd5b6118f383611659565b946020939093013593505050565b60006020828403121561191357600080fd5b813561098981611c14565b60006020828403121561193057600080fd5b815161098981611c14565b60006020828403121561194d57600080fd5b61098982611682565b6000806000806080858703121561196c57600080fd5b61197585611682565b93506020850135925061198a60408601611682565b9396929550929360600135925050565b6000602082840312156119ac57600080fd5b5035919050565b600081518084526119cb816020860160208601611a9f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60008351611a0f818460208801611a9f565b835190830190611a23818360208801611a9f565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a6b60808301846119b3565b9695505050505050565b60208152600061098960208301846119b3565b600082821015611a9a57611a9a611b58565b500390565b60005b83811015611aba578181015183820152602001611aa2565b838111156106835750506000910152565b600181811c90821680611adf57607f821691505b60208210811415611b19577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b5157611b51611b58565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610a4057600080fdfea2646970667358221220246b46c0620959acf28a53a4e854cd2386c303b3d0fc68a83cf12214cd1606a964736f6c63430008060033";

type ERC721TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721TestToken__factory extends ContractFactory {
  constructor(...args: ERC721TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721TestToken> {
    return super.deploy(overrides || {}) as Promise<ERC721TestToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721TestToken {
    return super.attach(address) as ERC721TestToken;
  }
  override connect(signer: Signer): ERC721TestToken__factory {
    return super.connect(signer) as ERC721TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TestTokenInterface {
    return new utils.Interface(_abi) as ERC721TestTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721TestToken {
    return new Contract(address, _abi, signerOrProvider) as ERC721TestToken;
  }
}
