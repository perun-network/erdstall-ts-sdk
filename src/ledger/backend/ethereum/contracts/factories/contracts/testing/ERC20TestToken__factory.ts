/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20TestToken,
  ERC20TestTokenInterface,
} from "../../../contracts/testing/ERC20TestToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "mode_",
        type: "uint8",
      },
    ],
    name: "setMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "before_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "countdown_",
        type: "uint256",
      },
      {
        internalType: "enum BehaviorSelect.Mode",
        name: "after_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "resetCount_",
        type: "uint256",
      },
    ],
    name: "setModeWithCountdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051806040016040528060078152602001660546573742032360cc1b815250604051806040016040528060038152602001621514d560ea1b815250816003908161005c9190610110565b5060046100698282610110565b5050506101ce565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009b57607f821691505b6020821081036100bb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010b57806000526020600020601f840160051c810160208510156100e85750805b601f840160051c820191505b8181101561010857600081556001016100f4565b50505b505050565b81516001600160401b0381111561012957610129610071565b61013d816101378454610087565b846100c1565b6020601f82116001811461017157600083156101595750848201515b600019600385901b1c1916600184901b178455610108565b600084815260208120601f198516915b828110156101a15787850151825560209485019460019092019101610181565b50848210156101bf5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610ab8806101dd6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146101bd578063a9059cbb146101c5578063d826f88f146101d8578063dd62ed3e146101e757600080fd5b806340c10f191461016e57806354ed9e321461018157806370a082311461019457600080fd5b806321175b4a116100bd57806321175b4a1461013757806323b872dd1461014c578063313ce5671461015f57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610220565b6040516100f99190610869565b60405180910390f35b6101156101103660046108d3565b6102b2565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b61014a61014536600461090c565b6102cc565b005b61011561015a366004610927565b6102fe565b604051601281526020016100f9565b61014a61017c3660046108d3565b610362565b61014a61018f366004610964565b610370565b6101296101a23660046109a8565b6001600160a01b031660009081526020819052604090205490565b6100ec6103c4565b6101156101d33660046108d3565b6103d3565b61014a60006006819055600855565b6101296101f53660046109c3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461022f906109f6565b80601f016020809104026020016040519081016040528092919081815260200182805461025b906109f6565b80156102a85780601f1061027d576101008083540402835291602001916102a8565b820191906000526020600020905b81548152906001019060200180831161028b57829003601f168201915b5050505050905090565b6000336102c0818585610433565b60019150505b92915050565b60006006556000196008556007805482919060ff191660018360058111156102f6576102f6610a30565b021790555050565b600080610309610445565b9050600181600581111561031f5761031f610a30565b0361032e57600091505061035b565b600281600581111561034257610342610a30565b0361034c57600080fd5b6103578585856104ab565b9150505b9392505050565b61036c82826104cf565b5050565b6005805485919060ff19166001838381111561038e5761038e610a30565b021790555060068390556007805483919060ff191660018360058111156103b7576103b7610a30565b0217905550600855505050565b60606004805461022f906109f6565b6000806103de610445565b905060018160058111156103f4576103f4610a30565b036104035760009150506102c6565b600281600581111561041757610417610a30565b0361042157600080fd5b61042b848461050a565b9150506102c6565b6104408383836001610518565b505050565b600060065460000361048857600854600003610465575060055460ff1690565b6001600860008282546104789190610a5c565b909155505060075460ff16919050565b60016006600082825461049b9190610a5c565b909155505060055460ff16919050565b6000336104b9858285610620565b6104c48585856106b2565b506001949350505050565b6001600160a01b0382166104fe5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b61036c60008383610726565b6000336102c08185856106b2565b6001600160a01b03841661055b576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016104f5565b6001600160a01b03831661059e576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016104f5565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561061a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061191815260200190565b60405180910390a35b50505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561061a57818110156106a3576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064016104f5565b61061a84848484036000610518565b6001600160a01b0383166106f5576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016104f5565b6001600160a01b03821661071f5760405163ec442f0560e01b8152600060048201526024016104f5565b6104408383835b6001600160a01b0383166107515780600260008282546107469190610a6f565b909155506107dc9050565b6001600160a01b038316600090815260208190526040902054818110156107bd576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260248101829052604481018390526064016104f5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166107f857600280548290039055610817565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161085c91815260200190565b60405180910390a3505050565b602081526000825180602084015260005b81811015610897576020818601810151604086840101520161087a565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146108ce57600080fd5b919050565b600080604083850312156108e657600080fd5b6108ef836108b7565b946020939093013593505050565b8035600681106108ce57600080fd5b60006020828403121561091e57600080fd5b61035b826108fd565b60008060006060848603121561093c57600080fd5b610945846108b7565b9250610953602085016108b7565b929592945050506040919091013590565b6000806000806080858703121561097a57600080fd5b610983856108fd565b935060208501359250610998604086016108fd565b9396929550929360600135925050565b6000602082840312156109ba57600080fd5b61035b826108b7565b600080604083850312156109d657600080fd5b6109df836108b7565b91506109ed602084016108b7565b90509250929050565b600181811c90821680610a0a57607f821691505b602082108103610a2a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102c6576102c6610a46565b808201808211156102c6576102c6610a4656fea2646970667358221220dcacd2b4bbdb2b90a2e52740e2040daa390dbba67a3e6785d09dec4e69525db164736f6c634300081b0033";

type ERC20TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20TestToken__factory extends ContractFactory {
  constructor(...args: ERC20TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20TestToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20TestToken__factory {
    return super.connect(runner) as ERC20TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TestTokenInterface {
    return new Interface(_abi) as ERC20TestTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20TestToken {
    return new Contract(address, _abi, runner) as unknown as ERC20TestToken;
  }
}
