/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockErdstall,
  MockErdstallInterface,
} from "../../../contracts/testing/MockErdstall";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tee",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_epochDuration",
        type: "uint64",
      },
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyWithdrawn",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerHasAlreadyChallengedThisEpoch",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerHasNoFrozenDeposits",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotTokenHolder",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerMustHaveValuesToChallenge",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyBalanceProof",
    type: "error",
  },
  {
    inputs: [],
    name: "ErdstallIsFrozen",
    type: "error",
  },
  {
    inputs: [],
    name: "ExitProofInChallengeBalanceProof",
    type: "error",
  },
  {
    inputs: [],
    name: "HasOpenChallenges",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "NoChallengeRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "NoExitProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NoOpenChallenges",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingFreeze",
    type: "error",
  },
  {
    inputs: [],
    name: "RegisteredTokenTypeMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenTypeNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "TooEarly",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTooEarlyEpochNotYetSealed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongBalanceChunk",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongBalanceProofEpochForChallenge",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChain",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongEpoch",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "count",
        type: "uint32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "origin",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "localID",
                type: "bytes32",
              },
            ],
            internalType: "struct Erdstall.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct Erdstall.TokenValue[]",
        name: "tokens",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exit",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "ChallengeResponded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "origin",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "localID",
                type: "bytes32",
              },
            ],
            internalType: "struct Erdstall.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct Erdstall.TokenValue",
        name: "value",
        type: "tuple",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "FirstTimeFungible",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sampleURI",
        type: "string",
      },
    ],
    name: "FirstTimeNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
    ],
    name: "Frozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "assetType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
    ],
    name: "TokenTypeRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "origin",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "localID",
                type: "bytes32",
              },
            ],
            internalType: "struct Erdstall.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        indexed: true,
        internalType: "struct Erdstall.TokenValue",
        name: "token",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "WithdrawalException",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "origin",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "localID",
                type: "bytes32",
              },
            ],
            internalType: "struct Erdstall.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct Erdstall.TokenValue[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "bigBangTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "challenges",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployBlockNum",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "assetType",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "token",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposits",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "origin",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "assetType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "localID",
            type: "bytes32",
          },
        ],
        internalType: "struct Erdstall.Asset",
        name: "asset",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
    ],
    name: "encodeBalanceProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ensureFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDuration",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozenEpoch",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "holderTypes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TokenHolder",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "invokeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "metadataWasHandled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "numChallenges",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "localTokenType",
        type: "uint8",
      },
    ],
    name: "registerTokenType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "respondChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "block",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
        ],
        internalType: "struct Erdstall.FreezeProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "certificate",
        type: "bytes",
      },
    ],
    name: "submitFreezeProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenHolders",
    outputs: [
      {
        internalType: "contract TokenHolder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "verifyBalance",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "abiCode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "verifyTeeSig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exit",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "origin",
                    type: "uint16",
                  },
                  {
                    internalType: "uint8",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "localID",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Erdstall.Asset",
                name: "asset",
                type: "tuple",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct Erdstall.TokenValue[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Erdstall.BalanceChunk",
        name: "balance",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "withdrawFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFrozenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610120604052600780546001600160401b0319166002600160401b031790553480156200002b57600080fd5b5060405162004718380380620047188339810160408190526200004e91620000e5565b824283836200005d3362000095565b6001600160a01b039093166080526001600160401b0343811660a05291821660c0521660e05261ffff16610100525062000155915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060608486031215620000fb57600080fd5b83516001600160a01b03811681146200011357600080fd5b60208501519093506001600160401b03811681146200013157600080fd5b604085015190925061ffff811681146200014a57600080fd5b809150509250925092565b60805160a05160c05160e05161010051614546620001d2600039600081816104b001528181610a3f01528181610c9b01528181610f9f01528181611bf40152612f2e0152600081816102f4015261229601526000818161046801526122bb0152600061034801526000818161037901526108eb01526145466000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638da5cb5b11610104578063b05f6207116100a2578063e83fd41111610071578063e83fd41114610526578063ee58c8d314610539578063f29107731461054c578063f2fde38b1461056c57600080fd5b8063b05f6207146104e5578063ba487473146104f8578063d2ef73981461050b578063d306a7b01461051357600080fd5b8063a53d2a54116100de578063a53d2a5414610440578063aa0f878714610463578063ab4f4bce14610498578063adc879e9146104ab57600080fd5b80638da5cb5b146103e15780639be21025146103ff578063a33a05401461041257600080fd5b80636463287711610171578063715018a61161014b578063715018a61461039b5780637aca9c69146103a357806384d98432146103b65780638c2d1768146103be57600080fd5b8063646328771461034357806364c38ddd1461036a57806367eeb62b1461037457600080fd5b80634a9527a8116101ad5780634a9527a81461029a5780634e905134146102cf5780634ff0876a146102ef578063585db72a1461032f57600080fd5b8063072f8cca146101d457806310fb107514610234578063234c49a014610254575b600080fd5b61020a6101e23660046133d2565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61024761024236600461377c565b61057f565b60405161022b9190613801565b610285610262366004613814565b600560209081526000928352604080842090915290825290205463ffffffff1681565b60405163ffffffff909116815260200161022b565b6102bd6102a836600461384b565b60016020526000908152604090205460ff1681565b60405160ff909116815260200161022b565b6102e26102dd366004613868565b6105d0565b60405161022b91906138a7565b6103167f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff909116815260200161022b565b6007546103169067ffffffffffffffff1681565b6103167f000000000000000000000000000000000000000000000000000000000000000081565b610372610644565b005b61020a7f000000000000000000000000000000000000000000000000000000000000000081565b6103726107c4565b6103726103b1366004613948565b6107d8565b610372610824565b6103d16103cc3660046139ac565b6108e2565b604051901515815260200161022b565b60005473ffffffffffffffffffffffffffffffffffffffff1661020a565b61037261040d366004613a25565b610918565b6103d1610420366004613814565b600460209081526000928352604080842090915290825290205460ff1681565b6103d161044e36600461384b565b60086020526000908152604090205460ff1681565b61048a7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161022b565b6103726104a6366004613a25565b610b32565b6104d27f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff909116815260200161022b565b6103726104f3366004613a25565b610e1d565b610372610506366004613a96565b6112ec565b610372611441565b610372610521366004613ac4565b61154c565b610372610534366004613b92565b611855565b610372610547366004613c15565b612148565b61048a61055a366004613c7a565b60066020526000908152604090205481565b61037261057a36600461384b565b6121d0565b6060816000015182602001518360400151846060015185608001518660a001518760c001516040516020016105ba9796959493929190613d63565b6040516020818303038152906040529050919050565b600360205282600052604060002060205281600052604060002081815481106105f857600080fd5b6000918252602091829020604080516060810182526003909302909101805461ffff8116845260ff62010000909104169383019390935260019092015491810191909152925083915050565b61066260075467ffffffffffffffff1667fffffffffffffffe141590565b1561066957565b6000610673612289565b9050610680600180613e3e565b61068b906001613e3e565b67ffffffffffffffff168167ffffffffffffffff1610156106d8576040517f085de62500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106e5600180613e3e565b6106f0906001613e3e565b6106fa9083613e66565b67ffffffffffffffff81166000908152600660205260408120549192500361074e576040517fbf1d9a6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061075b600183613e66565b600780547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff8316908117909155604051919250907f5e20151a99b0432a9ac06d33b91b77d3134ce0638cc70d7df042947ca48a2caf90600090a2505050565b6107cc6122ef565b6107d66000612370565b565b6107ea6107e48361057f565b826108e2565b610820576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61082c610644565b6040805160008082526020820190925261088b9082610885565b6040805160a081018252600091810182815260608083018490526080830193909352815260208101919091528152602001906001900390816108465790505b506123e5565b905080516000036108c8576040517f52e45e7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007546108df9067ffffffffffffffff1682612990565b50565b600061090f83837f0000000000000000000000000000000000000000000000000000000000000000612c58565b90505b92915050565b610920610644565b610928612cee565b67ffffffffffffffff1661093f6020850185613c7a565b67ffffffffffffffff161115610981576040517f085de62500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3361099260a085016080860161384b565b73ffffffffffffffffffffffffffffffffffffffff16146109df576040517f4e6a565c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075467ffffffffffffffff166109f96020850185613c7a565b67ffffffffffffffff1614610a3a576040517f254f6ab200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff7f000000000000000000000000000000000000000000000000000000000000000016610a6f6080850160608601613e87565b61ffff1614610aaa576040517f10dfc03300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610af2610ab684613ea2565b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107d892505050565b6000610b12610b0460c0860186613eae565b610b0d91613f16565b6123e5565b600754909150610b2c9067ffffffffffffffff1682612990565b50505050565b610b5060075467ffffffffffffffff1667fffffffffffffffe141590565b15610b87576040517fb29ebf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b91612289565b9050610b9e600180613e3e565b610ba9906001613e3e565b67ffffffffffffffff168167ffffffffffffffff1610610c355767ffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd82011660009081526006602052604090205415610c35576040517e5be66700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c3d612cee565b67ffffffffffffffff16610c546020860186613c7a565b67ffffffffffffffff161115610c96576040517fe6e64ebc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff7f000000000000000000000000000000000000000000000000000000000000000016610ccb6080860160608701613e87565b61ffff1614610d06576040517f10dfc03300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33610d1760a086016080870161384b565b73ffffffffffffffffffffffffffffffffffffffff1614610d64576040517f4e6a565c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d7460c0850160a08601613f23565b610daa576040517fa5736a8100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610df2610db685613ea2565b84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107d892505050565b610b2c610e026020860186613c7a565b610e0f60c0870187613eae565b610e1891613f16565b612990565b610e3b60075467ffffffffffffffff1667fffffffffffffffe141590565b15610e72576040517fb29ebf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610e7c612289565b9050610e89600180613e3e565b610e94906001613e3e565b67ffffffffffffffff168167ffffffffffffffff1610610f205767ffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd82011660009081526006602052604090205415610f20576040517e5be66700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f2d600180613e3e565b610f35612289565b610f3f9190613e66565b905067ffffffffffffffff8116610f596020870187613c7a565b67ffffffffffffffff1614610f9a576040517f254f6ab200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff7f000000000000000000000000000000000000000000000000000000000000000016610fcf6080870160608801613e87565b61ffff161461100a576040517f10dfc03300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff811660009081526005602052604081208161103460a0890160808a0161384b565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160009081205463ffffffff16915081900361109e576040517f0ce63e0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b63ffffffff81166110b56040880160208901613f3e565b6110c0906001613f59565b63ffffffff16146110fd576040517f38ee6b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61114561110987613ea2565b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107d892505050565b6111556060870160408801613f3e565b63ffffffff168163ffffffff160361119a5767ffffffffffffffff8216600090815260066020526040812080549161118c83613f76565b9190505550600090506111a8565b806111a481613fab565b9150505b67ffffffffffffffff8216600090815260056020526040812082916111d360a08a0160808b0161384b565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff9290921691909117905561123c60a087016080880161384b565b73ffffffffffffffffffffffffffffffffffffffff1661125f6020880188613c7a565b67ffffffffffffffff167f5c48277659215aaf0facef5d08697306e1cd011dcdb5e7455f5d4c31d3dcddbc61129a60408a0160208b01613f3e565b6112aa60608b0160408c01613f3e565b6112b760c08c018c613eae565b6112c760c08e0160a08f01613f23565b8c8c6040516112dc9796959493929190614044565b60405180910390a3505050505050565b6112f46122ef565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff1680156113715761132e8260016141ce565b60ff168160ff161461136c576040517fc081a4b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b61137c8260016141ce565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260016020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff968716179055938616808352600282529184902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905583519182528101919091527fa67714b04395227af4e4053e2f5b91c09833fa91968bef5e1e3190437ac329c5910160405180910390a1505050565b61145f60075467ffffffffffffffff1667fffffffffffffffe141590565b15611496576040517fb29ebf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006114a0612289565b90506114ad600180613e3e565b6114b8906001613e3e565b67ffffffffffffffff168167ffffffffffffffff16106115445767ffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd82011660009081526006602052604090205415611544576040517e5be66700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108df612d90565b611557600180613e3e565b611562906001613e3e565b61156d906001613e3e565b61157d6060870160408801613c7a565b6115879190613e3e565b67ffffffffffffffff16611599612289565b67ffffffffffffffff16146115da576040517f254f6ab200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116b76115ec6020880188613e87565b6115fc6040890160208a01613c7a565b61160c60608a0160408b01613c7a565b6040516020016116739392919060808082526013908201527f4572647374616c6c467265657a6550726f6f660000000000000000000000000060a082015261ffff93909316602084015267ffffffffffffffff918216604084015216606082015260c00190565b60408051601f198184030181526020601f890181900481028401810190925287835291908890889081908401838280828437600092019190915250612ead92505050565b90506117618160405160200161171d919060408082526017908201527f4572647374616c6c4c69676874436c69656e7443657274000000000000000000606082015273ffffffffffffffffffffffffffffffffffffffff91909116602082015260800190565b60408051601f198184030181526020601f8701819004810284018101909252858352919086908690819084018382808284376000920191909152506108e292505050565b611797576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117a76060870160408801613c7a565b60075467ffffffffffffffff90811691161461184d576117cd6060870160408801613c7a565b600780547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff929092169190911790556118166060870160408801613c7a565b67ffffffffffffffff167f5e20151a99b0432a9ac06d33b91b77d3134ce0638cc70d7df042947ca48a2caf60405160405180910390a25b505050505050565b3360009081526001602052604081205460ff1690036118a0576040517f0c4abd2a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118be60075467ffffffffffffffff1667fffffffffffffffe141590565b156118f5576040517fb29ebf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118ff612289565b905061190c600180613e3e565b611917906001613e3e565b67ffffffffffffffff168167ffffffffffffffff16106119a35767ffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd820116600090815260066020526040902054156119a3576040517e5be66700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006119ad612289565b60ff881660009081526002602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16611a185760ff8716600090815260026020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790555b6000604051806040016040528060405180606001604052808a61ffff1681526020018b60ff168152602001898152508152602001868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508152509050600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548160ff021916908360ff1602179055506040820151816001015550506020820151816002019080519060200190611b969291906132d7565b5050508873ffffffffffffffffffffffffffffffffffffffff168267ffffffffffffffff167feb3100c7367bb9282fc3c80cba98d82025422adc0f72a4e137d0acc3757f849283604051611bea91906141e7565b60405180910390a37f000000000000000000000000000000000000000000000000000000000000000061ffff168761ffff1614611c2857505061213f565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260086020526040902054869060ff1661213b5773ffffffffffffffffffffffffffffffffffffffff8116600081815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611d5557604080518881526080602082018190526005908201527f457468657200000000000000000000000000000000000000000000000000000060a082015260c08183018190526003908201527f455448000000000000000000000000000000000000000000000000000000000060e08201526012606082015290517fb1e1d22424bcf87c08b3dab1ba6e7b5fdfbae1cebde669d3ac99811cdba3ccc0918190036101000190a150505061213f565b60608173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa925050508015611dc357506040513d6000823e601f3d908101601f19168201604052611dc091908101906141fa565b60015b611e0f573d808015611df1576040519150601f19603f3d011682016040523d82523d6000602084013e611df6565b606091505b5060405180602001604052806000815250915050611e12565b90505b60608273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa925050508015611e8057506040513d6000823e601f3d908101601f19168201604052611e7d91908101906141fa565b60015b611ecc573d808015611eae576040519150601f19603f3d011682016040523d82523d6000602084013e611eb3565b606091505b5060405180602001604052806000815250915050611ecf565b90505b60ff8b16611fc45760008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f40575060408051601f3d908101601f19168201909252611f3d91810190614271565b60015b611f7e573d808015611f6e576040519150601f19603f3d011682016040523d82523d6000602084013e611f73565b606091505b506000915050611f81565b90505b7fb1e1d22424bcf87c08b3dab1ba6e7b5fdfbae1cebde669d3ac99811cdba3ccc08a848484604051611fb6949392919061428e565b60405180910390a150612138565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff8c16016121065760608373ffffffffffffffffffffffffffffffffffffffff1663c87b56dd8a8a600081811061201f5761201f6142ce565b905060200201356040518263ffffffff1660e01b815260040161204491815260200190565b600060405180830381865afa92505050801561208257506040513d6000823e601f3d908101601f1916820160405261207f91908101906141fa565b60015b6120ce573d8080156120b0576040519150601f19603f3d011682016040523d82523d6000602084013e6120b5565b606091505b50604051806020016040528060008152509150506120d1565b90505b7f59a3797aef1d99d386b9b3e9b8aff1f784aba7b9e43435540cb12727d38e7fc08a848484604051611fb694939291906142fd565b6040517fd623472500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505b5050505b50505050505050565b6040517fd1beaffa00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063d1beaffa906121a29088908890889088908890600401614347565b600060405180830381600087803b1580156121bc57600080fd5b505af115801561213b573d6000803e3d6000fd5b6121d86122ef565b73ffffffffffffffffffffffffffffffffffffffff8116612280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108df81612370565b600067ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166122e07f000000000000000000000000000000000000000000000000000000000000000042614387565b6122ea919061439a565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401612277565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60075460609060009060039082906124089067ffffffffffffffff166001613e3e565b67ffffffffffffffff908116825260208083019390935260409182016000908120338252909352908220600754909350600391839161244991166002613e3e565b67ffffffffffffffff9081168252602080830193909352604091820160009081203382529093529082206007549093506003918391612489911683613e3e565b67ffffffffffffffff1681526020808201929092526040908101600090812033825290925281208054845486548951939550919290916124c8916143d5565b6124d291906143d5565b6124dc91906143d5565b67ffffffffffffffff8111156124f4576124f46133ef565b60405190808252806020026020018201604052801561255157816020015b6040805160a081018252600091810182815260608083018490526080830193909352815260208101919091528152602001906001900390816125125790505b5090506000805b87518110156125b757878181518110612573576125736142ce565b6020026020010151838380612587906143e8565b945081518110612599576125996142ce565b602002602001018190525080806125af906143e8565b915050612558565b5060005b85548110156126ae578581815481106125d6576125d66142ce565b60009182526020918290206040805160a081018252600393909302909101805461ffff81168484019081526201000090910460ff16606085015260018201546080850152835260028101805483518187028101870190945280845293949193858301939283018282801561266957602002820191906000526020600020905b815481526020019060010190808311612655575b50505050508152505083838061267e906143e8565b945081518110612690576126906142ce565b602002602001018190525080806126a6906143e8565b9150506125bb565b5060005b84548110156127a5578481815481106126cd576126cd6142ce565b60009182526020918290206040805160a081018252600393909302909101805461ffff81168484019081526201000090910460ff16606085015260018201546080850152835260028101805483518187028101870190945280845293949193858301939283018282801561276057602002820191906000526020600020905b81548152602001906001019080831161274c575b505050505081525050838380612775906143e8565b945081518110612787576127876142ce565b6020026020010181905250808061279d906143e8565b9150506126b2565b5060005b835481101561289c578381815481106127c4576127c46142ce565b60009182526020918290206040805160a081018252600393909302909101805461ffff81168484019081526201000090910460ff16606085015260018201546080850152835260028101805483518187028101870190945280845293949193858301939283018282801561285757602002820191906000526020600020905b815481526020019060010190808311612843575b50505050508152505083838061286c906143e8565b94508151811061287e5761287e6142ce565b60200260200101819052508080612894906143e8565b9150506127a9565b506007546003906000906128bb9067ffffffffffffffff166001613e3e565b67ffffffffffffffff1681526020808201929092526040908101600090812033825290925281206128eb91613322565b6007546003906000906129099067ffffffffffffffff166002613e3e565b67ffffffffffffffff16815260208082019290925260409081016000908120338252909252812061293991613322565b6007546003906000906129569067ffffffffffffffff1683613e3e565b67ffffffffffffffff16815260208082019290925260409081016000908120338252909252812061298691613322565b5095945050505050565b67ffffffffffffffff8216600090815260046020908152604080832033845290915290205460ff16156129ef576040517f6507689f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff82166000908152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905581519003612a76576040517feae9756900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8151811015612bfa576000828281518110612a9657612a966142ce565b602002602001015190506000612aaf8260000151612f22565b82518051604091820151602086015192517fd1beaffa00000000000000000000000000000000000000000000000000000000815293945073ffffffffffffffffffffffffffffffffffffffff85169363d1beaffa93612b15939291339190600401614420565b600060405180830381600087803b158015612b2f57600080fd5b505af1925050508015612b40575060015b612be5573d808015612b6e576040519150601f19603f3d011682016040523d82523d6000602084013e612b73565b606091505b5082604051612b829190614469565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff168767ffffffffffffffff167f17c878afc06be2054e373e11d19bd490c8a7957085244d6154d1c9f7f7799d6684604051612bdb9190613801565b60405180910390a4505b50508080612bf2906143e8565b915050612a79565b503373ffffffffffffffffffffffffffffffffffffffff168267ffffffffffffffff167fc28beb9414af60e5f13561f08a5f1b5719d8bd778c3159c33c9cf261d7fb898483604051612c4c91906144ce565b60405180910390a35050565b600080612cb985805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506000612cc78286612fea565b73ffffffffffffffffffffffffffffffffffffffff90811690851614925050509392505050565b600080612cf9612289565b9050612d06600180613e3e565b612d11906001613e3e565b612d1c906001613e3e565b67ffffffffffffffff168167ffffffffffffffff161015612d69576040517f085de62500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01919050565b60006001612d9c612289565b612da69190613e66565b67ffffffffffffffff8116600090815260056020908152604080832033845290915290205490915063ffffffff1615612e0b576040517f860ec9c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff81166000818152600560209081526040808320338452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000016600117905592825260069052908120805491612e6e836143e8565b9091555050604051339067ffffffffffffffff8316907f9f71686e9e2eed0a0a99340b1c3b230369f255b1d452130cead54f8308654dfd90600090a350565b600080612f0e84805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050612f1a8184612fea565b949350505050565b600080826020015190507f000000000000000000000000000000000000000000000000000000000000000061ffff16836000015161ffff16148015612f6c5750602083015160ff16155b8015612f7a57506040830151155b15612f83575060025b60ff811660009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680612fe3576040517fc9adea7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b6000806000612ff9858561300e565b9150915061300681613053565b509392505050565b60008082516041036130445760208301516040840151606085015160001a61303887828585613206565b9450945050505061304c565b506000905060025b9250929050565b6000816004811115613067576130676144e1565b0361306f5750565b6001816004811115613083576130836144e1565b036130ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401612277565b60028160048111156130fe576130fe6144e1565b03613165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401612277565b6003816004811115613179576131796144e1565b036108df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401612277565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561323d57506000905060036132ce565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613291573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff81166132c7576000600192509250506132ce565b9150600090505b94509492505050565b828054828255906000526020600020908101928215613312579160200282015b828111156133125782518255916020019190600101906132f7565b5061331e929150613343565b5090565b50805460008255600302906000526020600020908101906108df9190613358565b5b8082111561331e5760008155600101613344565b8082111561331e5780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016815560006001820181905561339c60028301826133a5565b50600301613358565b50805460008255906000526020600020908101906108df9190613343565b60ff811681146108df57600080fd5b6000602082840312156133e457600080fd5b8135612fe3816133c3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715613441576134416133ef565b60405290565b6040516060810167ffffffffffffffff81118282101715613441576134416133ef565b60405160e0810167ffffffffffffffff81118282101715613441576134416133ef565b604051601f8201601f1916810167ffffffffffffffff811182821017156134b6576134b66133ef565b604052919050565b803567ffffffffffffffff811681146134d657600080fd5b919050565b803563ffffffff811681146134d657600080fd5b803561ffff811681146134d657600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146108df57600080fd5b80356134d681613501565b803580151581146134d657600080fd5b600067ffffffffffffffff821115613558576135586133ef565b5060051b60200190565b60006135756135708461353e565b61348d565b8381529050602080820190600585811b85018781111561359457600080fd5b855b818110156136a257803567ffffffffffffffff808211156135b75760008081fd5b90880190818b0360808112156135cd5760008081fd5b6135d561341e565b6060808312156135e55760008081fd5b6135ed613447565b92506135f8856134ef565b835288850135613607816133c3565b838a01526040858101359084015291815290830135908282111561362b5760008081fd5b81840193508c601f85011261364257600092508283fd5b833592506136526135708461353e565b83815292871b840188019288810192508d8411156136705760008081fd5b938801935b8385101561368e57843583529388019391880191613675565b818901528852505050938301938301613596565b50505050509392505050565b600082601f8301126136bf57600080fd5b61090f83833560208501613562565b600060e082840312156136e057600080fd5b6136e861346a565b90506136f3826134be565b8152613701602083016134db565b6020820152613712604083016134db565b6040820152613723606083016134ef565b606082015261373460808301613523565b608082015261374560a0830161352e565b60a082015260c082013567ffffffffffffffff81111561376457600080fd5b613770848285016136ae565b60c08301525092915050565b60006020828403121561378e57600080fd5b813567ffffffffffffffff8111156137a557600080fd5b612f1a848285016136ce565b60005b838110156137cc5781810151838201526020016137b4565b50506000910152565b600081518084526137ed8160208601602086016137b1565b601f01601f19169290920160200192915050565b60208152600061090f60208301846137d5565b6000806040838503121561382757600080fd5b613830836134be565b9150602083013561384081613501565b809150509250929050565b60006020828403121561385d57600080fd5b8135612fe381613501565b60008060006060848603121561387d57600080fd5b613886846134be565b9250602084013561389681613501565b929592945050506040919091013590565b815161ffff16815260208083015160ff16908201526040808301519082015260608101610912565b600067ffffffffffffffff8211156138e9576138e96133ef565b50601f01601f191660200190565b600082601f83011261390857600080fd5b8135613916613570826138cf565b81815284602083860101111561392b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561395b57600080fd5b823567ffffffffffffffff8082111561397357600080fd5b61397f868387016136ce565b9350602085013591508082111561399557600080fd5b506139a2858286016138f7565b9150509250929050565b600080604083850312156139bf57600080fd5b823567ffffffffffffffff808211156139d757600080fd5b61397f868387016138f7565b60008083601f8401126139f557600080fd5b50813567ffffffffffffffff811115613a0d57600080fd5b60208301915083602082850101111561304c57600080fd5b600080600060408486031215613a3a57600080fd5b833567ffffffffffffffff80821115613a5257600080fd5b9085019060e08288031215613a6657600080fd5b90935060208501359080821115613a7c57600080fd5b50613a89868287016139e3565b9497909650939450505050565b60008060408385031215613aa957600080fd5b8235613ab481613501565b91506020830135613840816133c3565b600080600080600085870360a0811215613add57600080fd5b6060811215613aeb57600080fd5b50859450606086013567ffffffffffffffff80821115613b0a57600080fd5b613b1689838a016139e3565b90965094506080880135915080821115613b2f57600080fd5b50613b3c888289016139e3565b969995985093965092949392505050565b60008083601f840112613b5f57600080fd5b50813567ffffffffffffffff811115613b7757600080fd5b6020830191508360208260051b850101111561304c57600080fd5b60008060008060008060a08789031215613bab57600080fd5b8635613bb681613501565b95506020870135613bc6816133c3565b9450613bd4604088016134ef565b935060608701359250608087013567ffffffffffffffff811115613bf757600080fd5b613c0389828a01613b4d565b979a9699509497509295939492505050565b60008060008060008060a08789031215613c2e57600080fd5b8635613c3981613501565b9550613c47602088016134ef565b9450604087013593506060870135613c5e81613501565b9250608087013567ffffffffffffffff811115613bf757600080fd5b600060208284031215613c8c57600080fd5b61090f826134be565b600081518084526020808501945080840160005b83811015613cc557815187529582019590820190600101613ca9565b509495945050505050565b613cf6828251805161ffff16825260208082015160ff1690830152604090810151910152565b6000602082015160806060850152612f1a6080850182613c95565b6000815180845260208085019450848260051b860182860160005b85811015613d56578383038952613d44838351613cd0565b98850198925090840190600101613d2c565b5090979650505050505050565b610100808252600f908201527f4572647374616c6c42616c616e6365000000000000000000000000000000000061012082015267ffffffffffffffff8816602082015263ffffffff87811660408301528616606082015261ffff8516608082015273ffffffffffffffffffffffffffffffffffffffff841660a082015282151560c082015261014060e08201819052600090613e0181840185613d11565b9a9950505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff818116838216019080821115613e5f57613e5f613e0f565b5092915050565b67ffffffffffffffff828116828216039080821115613e5f57613e5f613e0f565b600060208284031215613e9957600080fd5b61090f826134ef565b600061091236836136ce565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112613ee357600080fd5b83018035915067ffffffffffffffff821115613efe57600080fd5b6020019150600581901b360382131561304c57600080fd5b600061090f368484613562565b600060208284031215613f3557600080fd5b61090f8261352e565b600060208284031215613f5057600080fd5b61090f826134db565b63ffffffff818116838216019080821115613e5f57613e5f613e0f565b600081613f8557613f85613e0f565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b600063ffffffff808316818103613fc457613fc4613e0f565b6001019392505050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561400057600080fd5b8260051b80836020870137939093016020019392505050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b600060a0820163ffffffff808b1684526020818b16818601526040915060a0828601528289845260c0860190506005935060c08a851b8701018b60005b8c81101561419f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4089840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818f36030181126140e257600080fd5b8e01608061ffff6140f2836134ef565b16855286820135614102816133c3565b60ff16858801528188013588860152606080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261414857600080fd5b90920187810192903567ffffffffffffffff81111561416657600080fd5b808b1b360384131561417757600080fd5b82828801526141898388018286613fce565b9789019796505050928601925050600101614081565b5050891515606088015286810360808801526141bc81898b614019565b9e9d5050505050505050505050505050565b60ff818116838216019081111561091257610912613e0f565b60208152600061090f6020830184613cd0565b60006020828403121561420c57600080fd5b815167ffffffffffffffff81111561422357600080fd5b8201601f8101841361423457600080fd5b8051614242613570826138cf565b81815285602083850101111561425757600080fd5b6142688260208301602086016137b1565b95945050505050565b60006020828403121561428357600080fd5b8151612fe3816133c3565b8481526080602082015260006142a760808301866137d5565b82810360408401526142b981866137d5565b91505060ff8316606083015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b84815260806020820152600061431660808301866137d5565b828103604084015261432881866137d5565b9050828103606084015261433c81856137d5565b979650505050505050565b61ffff8616815284602082015273ffffffffffffffffffffffffffffffffffffffff8416604082015260806060820152600061433c608083018486613fce565b8181038181111561091257610912613e0f565b6000826143d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8082018082111561091257610912613e0f565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361441957614419613e0f565b5060010190565b61ffff8516815283602082015273ffffffffffffffffffffffffffffffffffffffff8316604082015260806060820152600061445f6080830184613c95565b9695505050505050565b8151805161ffff16825260208082015160ff1681840152604091820151918301919091528083015180516000929182019190839060608601905b808310156144c357845182529383019360019290920191908301906144a3565b509695505050505050565b60208152600061090f6020830184613d11565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212209d0361dac7f91f36d6442ef7bc690530a0eccc7cdd1b753347cdfa3eabcfb57364736f6c63430008130033";

type MockErdstallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockErdstallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockErdstall__factory extends ContractFactory {
  constructor(...args: MockErdstallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tee: PromiseOrValue<string>,
    _epochDuration: PromiseOrValue<BigNumberish>,
    _chainID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockErdstall> {
    return super.deploy(
      _tee,
      _epochDuration,
      _chainID,
      overrides || {}
    ) as Promise<MockErdstall>;
  }
  override getDeployTransaction(
    _tee: PromiseOrValue<string>,
    _epochDuration: PromiseOrValue<BigNumberish>,
    _chainID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tee,
      _epochDuration,
      _chainID,
      overrides || {}
    );
  }
  override attach(address: string): MockErdstall {
    return super.attach(address) as MockErdstall;
  }
  override connect(signer: Signer): MockErdstall__factory {
    return super.connect(signer) as MockErdstall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockErdstallInterface {
    return new utils.Interface(_abi) as MockErdstallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockErdstall {
    return new Contract(address, _abi, signerOrProvider) as MockErdstall;
  }
}
