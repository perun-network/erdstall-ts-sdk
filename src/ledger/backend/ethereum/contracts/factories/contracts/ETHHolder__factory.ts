/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ETHHolder, ETHHolderInterface } from "../../contracts/ETHHolder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erdstall",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotErdstall",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTheOriginChain",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongLocalID",
    type: "error",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erdstall",
    outputs: [
      {
        internalType: "contract Erdstall",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "origin",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "localID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161079138038061079183398101604081905261002f91610049565b6001600160a01b0390911660805261ffff1660a052610096565b6000806040838503121561005c57600080fd5b82516001600160a01b038116811461007357600080fd5b602084015190925061ffff8116811461008b57600080fd5b809150509250929050565b60805160a0516106bc6100d56000396000818160b4015281816101fd01526103080152600081816056015281816101cb015261027601526106bc6000f3fe60806040526004361061003f5760003560e01c8063411f925c14610044578063adc879e9146100a2578063d0e30db0146100e9578063d1beaffa146100f3575b600080fd5b34801561005057600080fd5b506100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100ae57600080fd5b506100d67f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610099565b6100f1610113565b005b3480156100ff57600080fd5b506100f161010e366004610515565b61025e565b3460000361014d576040517f95b66fe900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080516001808252818301909252600091602080830190803683370190505090503481600081518110610183576101836105d7565b60209081029190910101526040517fe83fd41100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e83fd411906102299033906000907f00000000000000000000000000000000000000000000000000000000000000009082908890600401610606565b600060405180830381600087803b15801561024357600080fd5b505af1158015610257573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102cd576040517f164cbd7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838015610306576040517f4bf479af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061ffff168661ffff1614610367576040517f57b7cbfa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a98383600081811061037d5761037d6105d7565b905060200201358573ffffffffffffffffffffffffffffffffffffffff166103b190919063ffffffff16565b505050505050565b80471015610420576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461047a576040519150601f19603f3d011682016040523d82523d6000602084013e61047f565b606091505b5050905080610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610417565b505050565b60008060008060006080868803121561052d57600080fd5b853561ffff8116811461053f57600080fd5b945060208601359350604086013573ffffffffffffffffffffffffffffffffffffffff8116811461056f57600080fd5b9250606086013567ffffffffffffffff8082111561058c57600080fd5b818801915088601f8301126105a057600080fd5b8135818111156105af57600080fd5b8960208260051b85010111156105c457600080fd5b9699959850939650602001949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a0820173ffffffffffffffffffffffffffffffffffffffff88168352602060ff88168185015261ffff8716604085015285606085015260a0608085015281855180845260c086019150828701935060005b818110156106765784518352938301939183019160010161065a565b50909a995050505050505050505056fea2646970667358221220cc54acdd7bb9f09dd330f519b1a7a0e5fa6a8df790cd2113f78e7337b481a32264736f6c63430008130033";

type ETHHolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHHolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHHolder__factory extends ContractFactory {
  constructor(...args: ETHHolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erdstall: PromiseOrValue<string>,
    _chainID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ETHHolder> {
    return super.deploy(
      erdstall,
      _chainID,
      overrides || {}
    ) as Promise<ETHHolder>;
  }
  override getDeployTransaction(
    erdstall: PromiseOrValue<string>,
    _chainID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erdstall, _chainID, overrides || {});
  }
  override attach(address: string): ETHHolder {
    return super.attach(address) as ETHHolder;
  }
  override connect(signer: Signer): ETHHolder__factory {
    return super.connect(signer) as ETHHolder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHHolderInterface {
    return new utils.Interface(_abi) as ETHHolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHHolder {
    return new Contract(address, _abi, signerOrProvider) as ETHHolder;
  }
}
