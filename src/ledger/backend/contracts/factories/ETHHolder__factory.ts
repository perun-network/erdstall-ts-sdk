/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ETHHolder } from "../ETHHolder";

export class ETHHolder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    erdstall: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ETHHolder> {
    return super.deploy(erdstall, overrides || {}) as Promise<ETHHolder>;
  }
  getDeployTransaction(
    erdstall: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erdstall, overrides || {});
  }
  attach(address: string): ETHHolder {
    return super.attach(address) as ETHHolder;
  }
  connect(signer: Signer): ETHHolder__factory {
    return super.connect(signer) as ETHHolder__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHHolder {
    return new Contract(address, _abi, signerOrProvider) as ETHHolder;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erdstall",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erdstall",
    outputs: [
      {
        internalType: "contract Erdstall",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161084738038061084783398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6107aa61009d60003960008181605601528181610103015261038201526107aa6000f3fe60806040526004361061003f5760003560e01c8063411f925c146100445780639e625f6c146100a1578063d0e30db0146100c3578063f1ddecf9146100cb575b600080fd5b34801561005057600080fd5b506100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100ad57600080fd5b506100c16100bc366004610650565b6100eb565b005b6100c161029f565b3480156100d757600080fd5b506100c16100e6366004610650565b6103f1565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f546f6b656e486f6c6465723a206e6f74204572647374616c6c0000000000000060448201526064015b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff811615610234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f455448486f6c6465723a206e6f74207a65726f20746f6b656e2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610186565b600061027584848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061045392505050565b905061029773ffffffffffffffffffffffffffffffffffffffff8616826104c8565b505050505050565b60003411610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f455448486f6c6465723a207a65726f2076616c756500000000000000000000006044820152606401610186565b6040805134602082015260009101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f46e6744b000000000000000000000000000000000000000000000000000000008252915073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906346e6744b906103bc90339060009086906004016106d9565b600060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b5050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f57697368204920636f756c6420646f20746861742e00000000000000000000006044820152606401610186565b600081516020146104c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f42797465733a206e6f74206c656e6774682033320000000000000000000000006044820152606401610186565b506020015190565b80471015610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610186565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461058c576040519150601f19603f3d011682016040523d82523d6000602084013e610591565b606091505b5050905080610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610186565b505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461064b57600080fd5b919050565b60008060008060608587031215610665578384fd5b61066e85610627565b935061067c60208601610627565b9250604085013567ffffffffffffffff80821115610698578384fd5b818701915087601f8301126106ab578384fd5b8135818111156106b9578485fd5b8860208285010111156106ca578485fd5b95989497505060200194505050565b600073ffffffffffffffffffffffffffffffffffffffff80861683526020818616818501526060604085015284519150816060850152825b8281101561072d57858101820151858201608001528101610711565b8281111561073e5783608084870101525b5050601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160800194935050505056fea26469706673582212205291d137a649c875a5c8da648911c24a1bf793bc28ece998dc43383e9304a9f564736f6c63430008030033";
